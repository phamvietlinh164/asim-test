{"version":3,"sources":["Page/form-item-config.js","configs/envs/development.js","configs/envs/production.js","configs/envs/testing.js","configs/envs/staging.js","configs/envs/index.js","configs/index.js","components/Avatar/Avatar.js","components/Select/select-config.js","components/Select/Select.js","Page/FormContent.js","App.js","serviceWorker.js","sagas.js","store/Login/loginReducer.js","reducers.js","store/Login/loginTypes.js","index.js"],"names":["formUploadItem","label","name","type","typeUrl","require","fieldName","DOMAIN_URL","window","location","hostname","COOKIE_EXPIRES","SOCKET_CHAT","RESTFULL_API_URL","development","testing","staging","production","currentEnv","_envs","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","Avatar","state","loading","imageUrl","props","hospital","handleChange","info","file","status","originFileObj","setState","localStorage","setItem","beforeUpload","isJpgOrPng","message","error","isLt2M","size","UNSAFE_componentWillReceiveProps","newProps","uploadButton","this","LoadingOutlined","PlusOutlined","className","listType","showUploadList","action","headers","onChange","src","alt","style","maxHeight","maxWidth","React","Component","selectObject","value","Option","SelectComponent","changeHospital","showOption","map","item","index","key","defaultValue","default","width","FormContent","componentDidMount","getItem","reload","showAvatar","xs","sm","md","lg","Select","connect","App","Boolean","match","rootSaga","all","initialState","username","password","combineReducers","login","payload","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3c76debd.chunk.js","sourcesContent":["export const formUploadItem = [\r\n  {\r\n    label: \"Header Logo\",\r\n    name: \"header_logo\",\r\n    type: 'image/svg+xml',\r\n    typeUrl: 'svg',\r\n    require: false,\r\n    fieldName: \"logo\"\r\n  },\r\n  {\r\n    label: \"Banner For Desktop\",\r\n    name: \"banner_desktop\",\r\n    type: 'image/png',\r\n    typeUrl: 'png',\r\n    require: false,\r\n    fieldName: \"image\"\r\n  },\r\n  {\r\n    label: \"Banner For Mobile\",\r\n    name: \"banner_mobile\",\r\n    type: 'image/png',\r\n    typeUrl: 'png',\r\n    require: false,\r\n    fieldName: \"image\"\r\n  },\r\n  {\r\n    label: \"Slide\",\r\n    name: \"slide\",\r\n    type: 'image/png',\r\n    typeUrl: 'png',\r\n    require: false,\r\n    fieldName: \"image\"\r\n  },\r\n  {\r\n    label: \"Logo Header White\",\r\n    name: \"logo_header_white\",\r\n    type: 'image/svg+xml',\r\n    typeUrl: 'svg',\r\n    require: false,\r\n    fieldName: \"logo\"\r\n  },\r\n  {\r\n    label: \"Footer Logo\",\r\n    name: \"footer_logo\",\r\n    type: 'image/svg+xml',\r\n    typeUrl: 'svg',\r\n    require: false,\r\n    fieldName: \"logo\"\r\n  },\r\n  {\r\n    label: \"Payment bill\",\r\n    name: \"payment_bill\",\r\n    type: 'image/png',\r\n    typeUrl: 'png',\r\n    require: false,\r\n    fieldName: \"image\"\r\n  },\r\n  {\r\n    label: \"Biên lai\",\r\n    name: \"bien_lai\",\r\n    type: 'image/png',\r\n    typeUrl: 'png',\r\n    require: false,\r\n    fieldName: \"image\"\r\n  },\r\n  {\r\n    label: \"Content\",\r\n    name: \"content\",\r\n    type: 'application/json',\r\n    typeUrl: 'json',\r\n    require: false,\r\n    fieldName: \"content\"\r\n  }\r\n]\r\n\r\n\r\nexport const layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\nexport const tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 2,\r\n  },\r\n};\r\n\r\nexport const uploadLayout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 12,\r\n  },\r\n};\r\nexport const uploadTailLayout = {\r\n  wrapperCol: {\r\n    offset: 1,\r\n    span: 6,\r\n  },\r\n};\r\n\r\n\r\n","export const DOMAIN_URL = window.location.hostname === \"localhost\" ? `http://${window.location.hostname}:6700` : window.location.hostname;\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\nexport const SOCKET_CHAT = \"wss://socket.pkh.vn/cable\";\r\n","export const DOMAIN_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";","export const DOMAIN_URL = window.location.hostname === \"localhost\" ? `http://${window.location.hostname}:6700` : window.location.hostname;\r\nexport const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\r\n","export const DOMAIN_URL = `https://${window.location.hostname}:3000`;\nexport const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\n\n\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\n\n","import * as development from \"./development\";\r\nimport * as production from \"./production\";\r\nimport * as testing from \"./testing\";\r\nimport * as staging from \"./staging\";\r\n// export const URL_DOWNLOAD_IOS = `https://apps.apple.com/`;\r\nexport const URL_DOWNLOAD_IOS = `/`;\r\n// export const URL_DOWNLOAD_ANDROID = `https://play.google.com/`;\r\nexport const URL_DOWNLOAD_ANDROID = `/`;\r\nexport default {\r\n  development,\r\n  testing,\r\n  staging,\r\n  production\r\n};\r\n","import _envs from \"./envs\";\r\n\r\nexport const APP_NAME = \"crm\";\r\nexport const currentEnvName = process.env.REACT_APP_STAGE || \"development\";\r\nexport const envs = _envs;\r\nexport const currentEnv = _envs[currentEnvName];\r\nexport const HOSPITAL_ID = 2;\r\n","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}`\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        })\r\n      }\r\n      );\r\n      localStorage.setItem('needRefresh', \"true\")\r\n\r\n    }\r\n  };\r\n\r\n  beforeUpload = file => {\r\n    // const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/svg+xml';\r\n    const isJpgOrPng = file.type === this.props.type;\r\n    if (!isJpgOrPng) {\r\n      // message.error('You can only upload JPG/PNG/SVG file!');\r\n      message.error(`You can only upload ${this.props.type} file!`);\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 5MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n\r\n    this.setState({ imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${newProps.hospital}/${newProps.name}.${this.props.typeUrl}` });\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/upload`}\r\n          headers={{ hospital: this.props.hospital, name: this.props.name }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;","export const selectObject = [\r\n  {\r\n    name: \"Medpro\",\r\n    value: \"medpro\"\r\n  },\r\n  {\r\n    name: \"Trưng Vương\",\r\n    value: \"trungvuong\"\r\n  },\r\n  {\r\n    name: \"Lê Lợi\",\r\n    value: \"leloi\"\r\n  },\r\n  {\r\n    name: \"An Giang\",\r\n    value: \"dkkvangiang\"\r\n  },\r\n  {\r\n    name: \"Đại học y dược\",\r\n    value: \"yduoccs2\"\r\n  },\r\n  {\r\n    name: \"Vạn Hạnh\",\r\n    value: \"vanhanh\"\r\n  },\r\n  {\r\n    name: \"Chợ Rẫy\",\r\n    value: \"choray\"\r\n  },\r\n  {\r\n    name: \"UMC\",\r\n    value: \"umc\"\r\n  },\r\n  {\r\n    name: \"Nhi đồng 1\",\r\n    value: \"nhidong1\"\r\n  },\r\n  {\r\n    name: \"Bệnh viện 115\",\r\n    value: \"bv115\"\r\n  }\r\n]","import React from 'react';\r\nimport { Select } from 'antd';\r\nimport { selectObject } from \"./select-config\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectComponent extends React.Component {\r\n\r\n  handleChange = (value) => {\r\n\r\n    this.props.changeHospital(`${value}`)\r\n  }\r\n\r\n  showOption = () => {\r\n    const result = selectObject.map((item, index) => {\r\n      return <Option value={item.value} key={index}>{item.name}</Option>\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Select defaultValue={this.props.default} style={{ width: 120 }} onChange={this.handleChange}>\r\n        {this.showOption()}\r\n      </Select>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectComponent","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { formUploadItem } from \"./form-item-config\";\r\nimport Avatar from \"../components/Avatar/Avatar\";\r\nimport Select from \"../components/Select/Select\";\r\nimport \"./FormContent.css\"\r\nimport axios from \"axios\";\r\n\r\nclass FormContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hospital: localStorage.getItem('hospital') || \"dkkvangiang\"\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    // axios.get('http://localhost:6700/static/upload/hospitals/bv115/content.json')\r\n    //   .then(function (response) {\r\n    //     // handle success\r\n    //     const data = response.data\r\n\r\n    //     const string = JSON.stringify(data).replace(/(?:\\\\[rn])+/g, \"\");\r\n    //     const object = JSON.parse(JSON.parse(string))\r\n    //     console.log(object);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //   })\r\n    //   .then(function () {\r\n    //     // always executed\r\n    //   });\r\n  }\r\n\r\n  changeHospital = (value) => {\r\n    localStorage.setItem('hospital', value);\r\n    this.setState({\r\n      hospital: value\r\n    })\r\n    if (localStorage.getItem('needRefresh') === 'true') {\r\n      localStorage.setItem('needRefresh', 'false')\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  // onFinish = values => {\r\n  //   console.log('Success:', values);\r\n  // };\r\n\r\n  // onFinishFailed = errorInfo => {\r\n  //   console.log('Failed:', errorInfo);\r\n  // };\r\n\r\n\r\n\r\n  showAvatar = () => {\r\n    const result = formUploadItem.map((item, index) => {\r\n      return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n        <Avatar label={item.label} name={item.name} hospital={this.state.hospital} type={item.type} fieldName={item.fieldName} typeUrl={item.typeUrl} />\r\n      </Col >\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Select changeHospital={this.changeHospital} default={this.state.hospital} />\r\n        <br />\r\n        <br />\r\n\r\n        <Row>\r\n          {this.showAvatar()}\r\n\r\n        </Row>\r\n\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// const mapStateToProps = state => {\r\n\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n\r\n\r\n// });\r\n\r\n\r\nexport default connect(null, null)(FormContent);","import React from 'react';\nimport './App.css';\n// import { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport FormContent from \"./Page/FormContent\";\n// import routes from './routes';\n// import { checkAuth } from './constantHelper/constant';\n\nclass App extends React.Component {\n\n\n    // showContentMenus = (routes) => {\n    //     var result = null;\n    //     if (routes.length > 0) {\n    //         result = routes.map((route, index) => {\n    //             return (<Route key={index} path={route.path} exact={route.exact} render={route.main} />)\n    //         })\n    //     }\n\n    //     return <Switch>{result}</Switch>\n    // }\n\n    render() {\n        return (\n\n            <div className=\"App\">\n\n                <FormContent />\n\n            </div>\n\n        );\n    }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { all } from \"redux-saga/effects\";\r\n\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    // fork(MonitorSaga),\r\n    // fork(ZabbixAlertSaga),\r\n  ]);\r\n}\r\n","import * as types from \"./loginTypes\";\r\n\r\nconst initialState = {\r\n  username: { value: \"\" },\r\n  password: { value: \"\" }\r\n\r\n};\r\n\r\nexport default function loginReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.SAVE_FIELD_LOGIN:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport login from \"./store/Login/loginReducer\"\r\n\r\n\r\nexport default combineReducers({\r\n  login\r\n\r\n});\r\n","export const SAVE_FIELD_LOGIN = \"SAVE_FIELD_LOGIN\";\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n// import appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n    // other store enhancers if any\n  )\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}