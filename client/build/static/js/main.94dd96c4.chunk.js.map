{"version":3,"sources":["components/Menu/Menu.js","configs/envs/development.js","configs/envs/production.js","configs/envs/testing.js","configs/envs/staging.js","configs/envs/index.js","configs/index.js","Page/Login/Login.js","components/Avatar/Avatar.js","components/UploadContent/UploadContent.js","store/ManageContent/manageContentActions.js","store/ManageContent/manageContentTypes.js","components/UpdateMessage/UpdateMessage.js","components/Select/Select.js","store/HospitalList/hospitalListActions.js","store/HospitalList/hospitalListTypes.js","components/DomainListTable/DomainListTable.js","Page/HospitalContent/HospitalContent.js","store/SubfolAppIcons/subfolAppIconsActions.js","store/SubfolAppIcons/subfolAppIconsTypes.js","components/AppIconUpload/AppIconUpload.js","components/SelectSubfol/SelectSubfol.js","Page/AppIcon/AppIcon.js","routes.js","history.js","App.js","store/checkAuth/checkAuthActions.js","store/checkAuth/checkAuthTypes.js","serviceWorker.js","constantHelper/API.js","store/HospitalList/hospitalListAPIs.js","store/HospitalList/hospitalListSaga.js","store/ManageContent/manageContentAPIs.js","store/ManageContent/manageContentSaga.js","store/SubfolAppIcons/subfolAppIconsAPIs.js","store/SubfolAppIcons/subfolAppIconsSaga.js","store/checkAuth/checkAuthSaga.js","sagas.js","store/Login/loginTypes.js","store/Login/loginReducer.js","store/HospitalList/hospitalListReducer.js","store/ManageContent/manageContentReducer.js","store/SubfolAppIcons/subfolAppIconsReducer.js","reducers.js","store/checkAuth/checkAuthReducer.js","index.js"],"names":["AntMenu","state","current","handleClick","e","setState","key","this","justify","onClick","selectedKeys","mode","Item","to","React","Component","DOMAIN_URL","RESTFULL_API_URL_V2","COOKIE_EXPIRES","SOCKET_CHAT","window","location","origin","development","testing","staging","production","currentEnv","_envs","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","onFinish","values","axios","post","username","password","then","response","data","localStorage","setItem","props","history","push","alert","catch","error","console","log","onFinishFailed","errorInfo","componentDidMount","message","Fragment","name","initialValues","remember","label","rules","required","Password","type","htmlType","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","Avatar","loading","imageUrl","hospital","typeUrl","Date","getTime","isOnSize","handleChange","info","file","status","originFileObj","statusCode","pathname","beforeUpload","Promise","resolve","reject","isJpgOrPng","isLt2M","size","Image","src","URL","createObjectURL","onload","width","UNSAFE_componentWillReceiveProps","newProps","uploadButton","LoadingOutlined","PlusOutlined","className","fieldName","listType","showUploadList","action","headers","token","getItem","onChange","alt","style","maxHeight","maxWidth","withRouter","UploadContent","fileList","slice","length","isJson","partnerId","manageContent","url","method","responseType","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","err","multiple","UploadOutlined","icon","DownloadOutlined","connect","getManageContent","getDomainList","UpdateMessage","disabled","accept","appid","forEach","ele","ContentType","success","target","value","xs","sm","md","lg","placeholder","dispatch","Option","SelectComponent","getHospitalList","showOption","hospitalList","map","item","index","defaultValue","default","Column","WrapperForm","addDomain","domain","useForm","form","resetFields","shouldUpdate","DomainListTable","enviromentValue","domainValue","editting","delete","text","deleteDomain","edit","record","enviroment","submitEdit","editDomain","_id","cancelEdit","onChangeDomain","onChangeEnviroment","tableData","domainList","element","toString","dataSource","pagination","title","dataIndex","render","onConfirm","id","HospitalContent","showAvatar","list","isLogin","formUploadItem","content","gutter","Select","changeHospital","subfolAppIcons","listFile","subfol","payload","AppIconUpload","replace","subFol","getNewListFile","isCorrectType","sameType","split","isLt5M","getListFile","SelectSubfol","listSubFol","arrSubfol","AppIcon","showAppIconUpload","listFileAppIcons","routes","path","exact","main","createBrowserHistory","App","checkAuth","showContentMenus","route","Boolean","hostname","match","getHttpRequest","a","get","postHttpRequestAsync","getHospitalListAPI","api","watchGetHospitalList","root","call","error_code","Error","shortData","put","takeLatest","all","fork","getManageContentAPI","axiosConfig","watchGetManageContent","watchGetDomainList","watchAddDomain","watchEditDomain","watchDeleteDomain","imageManage","select","getListFileAPI","watchGetListFile","watchGetNewListFile","getListSubfol","watchGetListSubfol","baseUrl","filter","common","x","indexOf","newFile","watchCheckAuth","rootSaga","initialState","combineReducers","login","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94dd96c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Menu, Row, Col } from 'antd';\r\n// import { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const { SubMenu } = Menu;\r\n\r\nclass AntMenu extends React.Component {\r\n  state = {\r\n    current: '',\r\n  };\r\n\r\n  handleClick = e => {\r\n    // console.log('click ', e);\r\n    this.setState({ current: e.key });\r\n  };\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n          <Menu.Item key=\"hospital-content\">\r\n            <Link to=\"/hospital-content\">Hospital Content</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app-icon\">\r\n            <Link to=\"/app-icon\">App Icon</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AntMenu","export const DOMAIN_URL = \"http://localhost:6700\"\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n// console.log(window.location)\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\nexport const SOCKET_CHAT = \"wss://socket.pkh.vn/cable\";\r\n","export const DOMAIN_URL = window.location.origin;\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";","export const DOMAIN_URL = \"https://static-inside-testing.medpro.com.vn\";\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\r\n","export const DOMAIN_URL = \"https://static-inside-testing.medpro.com.vn\";\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\n\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\n\n\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\n\n","import * as development from \"./development\";\r\nimport * as production from \"./production\";\r\nimport * as testing from \"./testing\";\r\nimport * as staging from \"./staging\";\r\n// export const URL_DOWNLOAD_IOS = `https://apps.apple.com/`;\r\nexport const URL_DOWNLOAD_IOS = `/`;\r\n// export const URL_DOWNLOAD_ANDROID = `https://play.google.com/`;\r\nexport const URL_DOWNLOAD_ANDROID = `/`;\r\nexport default {\r\n  development,\r\n  testing,\r\n  staging,\r\n  production\r\n};\r\n","import _envs from \"./envs\";\r\n\r\nexport const APP_NAME = \"crm\";\r\nexport const currentEnvName = process.env.REACT_APP_STAGE || \"development\";\r\nexport const envs = _envs;\r\nexport const currentEnv = _envs[currentEnvName];\r\nexport const HOSPITAL_ID = 2;\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { currentEnv } from \"../../configs\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nclass Login extends React.Component {\r\n  onFinish = values => {\r\n    // console.log('Success:', values);\r\n    axios.post(`${currentEnv.DOMAIN_URL}/login`, {\r\n      username: values.username,\r\n      password: values.password\r\n    })\r\n      .then(response => {\r\n        // console.log(response.data)\r\n        if (response.data) {\r\n          localStorage.setItem('token', response.data);\r\n          this.props.history.push('/hospital-content')\r\n        } else {\r\n          alert('Wrong username or password!')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Some error have happened!')\r\n      });\r\n  };\r\n\r\n  onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.location.state) {\r\n      if (this.props.location.state.message) {\r\n        alert(this.props.location.state.message)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Avatar.css'\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}?${new Date().getTime()}`,\r\n    isOnSize: false\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.setState({\r\n          imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}?${new Date().getTime()}`,\r\n          loading: false,\r\n        })\r\n      }\r\n      );\r\n      // var newImage = new Image();\r\n      // newImage.src = `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}`;\r\n      // localStorage.setItem('needRefresh', \"true\");\r\n      // window.location.reload();\r\n\r\n\r\n    }\r\n\r\n    if (info.file.status === 'error') {\r\n      console.log(info)\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  beforeUpload = file => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const isJpgOrPng = file.type === this.props.type;\r\n      if (!isJpgOrPng) {\r\n        message.error(`You can only upload ${this.props.type} file!`);\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 < 5;\r\n      if (!isLt2M) {\r\n        message.error('Image must smaller than 5MB!');\r\n      }\r\n\r\n      let img = new Image()\r\n      img.src = window.URL.createObjectURL(file)\r\n\r\n      img.onload = () => {\r\n        // alert(img.width + \" \" + img.height);\r\n        // console.log(img.width)\r\n        if (isJpgOrPng && isLt2M && img.width > 100) {\r\n          resolve(file);\r\n        } else {\r\n          reject('abc')\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n\r\n    this.setState({ imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${newProps.hospital}/${newProps.name}.${this.props.typeUrl}` });\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/upload`}\r\n          headers={{ hospital: this.props.hospital, name: this.props.name, token: `${localStorage.getItem('token')}` }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Avatar);","import React from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n// import { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from 'axios';\r\nimport { currentEnv } from \"../../configs\";\r\nimport \"./UploadContent.css\"\r\n\r\nclass UploadContent extends React.Component {\r\n  state = {\r\n    fileList: [\r\n      // {\r\n      //   uid: '-1',\r\n      //   name: 'xxx.png',\r\n      //   status: 'done',\r\n      //   url: 'http://www.baidu.com/xxx.png',\r\n      // },\r\n    ],\r\n  };\r\n\r\n  handleChange = info => {\r\n\r\n    let fileList = [...info.fileList];\r\n\r\n    // 1. Limit the number of uploaded files\r\n    // Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    fileList = fileList.slice(-1);\r\n    // console.log(fileList)\r\n\r\n    if (fileList.length > 0) {\r\n      if (fileList[0].type !== this.props.type) {\r\n        fileList[0].status = 'error'\r\n      }\r\n    }\r\n    this.setState({ fileList });\r\n\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  beforeUpload = file => {\r\n    // console.log(file)\r\n    const isJson = file.type === this.props.type;\r\n    if (!isJson) {\r\n      message.error(`You can only upload ${this.props.type} file!`);\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt2M) {\r\n      message.error('File must smaller than 5MB!');\r\n    }\r\n\r\n    return isJson && isLt2M;\r\n  }\r\n\r\n  onClick = () => {\r\n    // console.log('abc')\r\n    // axios.get('http://localhost:6700/download/client-upload-hospitals-115-content.json').then(response => {\r\n    //   console.log(response)\r\n    // }).catch(err => {\r\n    //   console.log(err)\r\n    // })\r\n    // this.props.history.push('/abc')\r\n    // console.log(this.props.manageContent.partnerId)\r\n    const partnerId = this.props.manageContent.partnerId\r\n\r\n    axios({\r\n      url: `${currentEnv.DOMAIN_URL}/download/client-upload-hospitals-${partnerId}-content.json`, //your url\r\n      method: 'GET',\r\n      responseType: 'blob', // important\r\n    }).then((response) => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'content.json'); //or any other extension\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      alert('Some error happen!')\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const props = {\r\n      name: this.props.fieldName,\r\n      action: `${currentEnv.DOMAIN_URL}/${this.props.action}`,\r\n      headers: { hospital: this.props.hospital, name: this.props.name, token: `${localStorage.getItem('token')}` },\r\n      onChange: this.handleChange,\r\n      beforeUpload: this.beforeUpload,\r\n      multiple: true,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className=\"upload\">\r\n\r\n\r\n        <div className=\"up_cont\">\r\n          <Upload {...props} fileList={this.state.fileList}>\r\n            <Button>\r\n              <UploadOutlined /> Upload\r\n            </Button>\r\n          </Upload>\r\n          <div className=\"download-but\">\r\n\r\n\r\n            <Button type=\"primary\" icon={<DownloadOutlined />} size='small' onClick={this.onClick}>\r\n              Download\r\n          </Button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(UploadContent);","import * as types from \"./manageContentTypes\";\r\n\r\n\r\nexport const getManageContent = (partnerId) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.GET_MANAGE_CONTENT,\r\n    partnerId\r\n  };\r\n};\r\n\r\nexport const getDomainList = (partnerId) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.GET_DOMAIN_LIST,\r\n    partnerId\r\n  };\r\n};\r\n\r\nexport const addDomain = (domain) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.ADD_DOMAIN,\r\n    domain\r\n  };\r\n};\r\n\r\nexport const editDomain = (domain) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.EDIT_DOMAIN,\r\n    domain\r\n  };\r\n};\r\n\r\nexport const deleteDomain = (id) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.DELETE_DOMAIN,\r\n    id\r\n  };\r\n};","export const GET_MANAGE_CONTENT = \"GET_MANAGE_CONTENT\";\r\nexport const GET_MANAGE_CONTENT_SUCCESS = \"GET_MANAGE_CONTENT_SUCCESS\";\r\nexport const GET_MANAGE_CONTENT_FAIL = \"GET_MANAGE_CONTENT_FAIL\";\r\n\r\nexport const GET_DOMAIN_LIST = \"GET_DOMAIN_LIST\";\r\nexport const GET_DOMAIN_LIST_SUCCESS = \"GET_DOMAIN_LIST_SUCCESS\";\r\nexport const GET_DOMAIN_LIST_FAIL = \"GET_DOMAIN_LIST_FAIL\";\r\n\r\nexport const ADD_DOMAIN = \"ADD_DOMAIN\";\r\nexport const ADD_DOMAIN_SUCCESS = \"ADD_DOMAIN_SUCCESS\";\r\nexport const ADD_DOMAIN_FAIL = \"ADD_DOMAIN_FAIL\";\r\n\r\nexport const EDIT_DOMAIN = \"EDIT_DOMAIN\";\r\nexport const EDIT_DOMAIN_SUCCESS = \"EDIT_DOMAIN_SUCCESS\";\r\nexport const EDIT_DOMAIN_FAIL = \"EDIT_DOMAIN_FAIL\";\r\n\r\nexport const DELETE_DOMAIN = \"DELETE_DOMAIN\";\r\nexport const DELETE_DOMAIN_SUCCESS = \"DELETE_DOMAIN_SUCCESS\";\r\nexport const DELETE_DOMAIN_FAIL = \"DELETE_DOMAIN_FAIL\";\r\n","import React from 'react';\r\nimport { Input, Button, Row, Col, message as messageAnt } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport { getManageContent } from \"../../store/ManageContent/manageContentActions\";\r\nimport { currentEnv } from \"../../configs\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nclass UpdateMessage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      disabled: true,\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n\r\n    if (this.props.manageContent.partnerId !== newProps.manageContent.partnerId) {\r\n      // console.log('abc');\r\n      this.setState({\r\n        message: \"\",\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onClick = () => {\r\n    if (this.state.disabled) {\r\n      this.setState({ loading: true })\r\n      const partnerId = this.props.manageContent.partnerId;\r\n      var message;\r\n      axios({\r\n        method: 'get',\r\n        url: `${currentEnv.RESTFULL_API_URL_V2}/mongo/hospital/danh-sach`,\r\n        headers: {\r\n          accept: \"*/*\",\r\n          appid: \"medpro\"\r\n        }\r\n      }).then((response) => {\r\n        response.data.forEach((ele) => {\r\n          if (ele.partnerId === partnerId) {\r\n            message = ele.message\r\n          }\r\n        });\r\n        this.setState({ disabled: false, message, loading: false });\r\n\r\n      }).catch(err => {\r\n        console.log(err);\r\n        this.setState({ loading: false })\r\n      });\r\n    } else {\r\n      this.setState({ disabled: true, loading: true });\r\n      axios({\r\n        method: 'post',\r\n        url: `${currentEnv.RESTFULL_API_URL_V2}/mongo/hospital/update-message-partner`,\r\n        headers: {\r\n          accept: \"*/*\",\r\n          appid: \"medpro\",\r\n          ContentType: \"application/json\"\r\n        },\r\n        data: {\r\n          partnerId: this.props.manageContent.partnerId,\r\n          message: this.state.message\r\n        }\r\n      }).then((response) => {\r\n        messageAnt.success('Update message successfully!')\r\n        this.setState({ loading: false })\r\n      }).catch(err => {\r\n        messageAnt.success('Some error happen!')\r\n        this.setState({ loading: false })\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ message: e.target.value })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col xs={24} sm={12} md={12} lg={19}>\r\n          <Input\r\n            placeholder=\"Enter your message\"\r\n            value={this.state.message}\r\n            size=\"middle\"\r\n            disabled={this.state.disabled}\r\n            onChange={this.onChange}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={4} md={8} lg={3}>\r\n          <Button type=\"primary\" size=\"middle\" onClick={this.onClick} loading={this.state.loading}>Update Message</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { manageContent } = state;\r\n  return { manageContent };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getManageContent: () => {\r\n    dispatch(getManageContent());\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateMessage);","import React from 'react';\r\nimport { Select } from 'antd';\r\n// import { selectObject } from \"./select-config\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHospitalList } from \"../../store/HospitalList/hospitalListActions\";\r\nimport { getManageContent } from \"../../store/ManageContent/manageContentActions\";\r\n\r\n\r\n\r\n\r\n// console.log(hospitalList)\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectComponent extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.getHospitalList()\r\n  }\r\n  handleChange = (value) => {\r\n    localStorage.setItem('hospital', value)\r\n    this.props.getManageContent(value)\r\n  }\r\n\r\n  showOption = () => {\r\n    const result = this.props.hospitalList.map((item, index) => {\r\n      return <Option value={item.partnerId} key={index}>{item.name}</Option>\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.hospitalList)\r\n    return (\r\n      <Select defaultValue={this.props.default} style={{ width: 320 }} onChange={this.handleChange} size={\"middle\"}>\r\n        {this.showOption()}\r\n      </Select>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { hospitalList } = state;\r\n  return { hospitalList };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getHospitalList: () => {\r\n    dispatch(getHospitalList());\r\n  },\r\n  getManageContent: (partnerId) => {\r\n    dispatch(getManageContent(partnerId));\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectComponent);","import * as types from \"./hospitalListTypes\";\r\n\r\n\r\nexport const getHospitalList = () => {\r\n  return {\r\n    type: types.GET_HOSPITAL_LIST,\r\n  };\r\n};\r\n\r\n","export const GET_HOSPITAL_LIST = \"GET_HOSPITAL_LIST\";\r\nexport const GET_HOSPITAL_LIST_SUCCESS = \"GET_HOSPITAL_LIST_SUCCESS\";\r\nexport const GET_HOSPITAL_LIST_FAIL = \"GET_HOSPITAL_LIST_FAIL\";\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { connect } from \"react-redux\";\r\n// import \"./HospitalContent.css\";\r\n// import axios from \"axios\";\r\n// import { currentEnv } from \"../../configs\";\r\n\r\n\r\nimport { Table, Space, Popconfirm } from 'antd';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { getDomainList, addDomain, editDomain, deleteDomain } from \"../../store/ManageContent/manageContentActions\";\r\nimport \"./DomainListTable.css\"\r\nconst { Column } = Table;\r\n\r\n\r\n\r\n\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     domain: 'https://static-inside-testing.medpro.com.vn',\r\n//     enviroment: 'testing'\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     domain: 'https://static-inside-testing.medpro.com.vn',\r\n//     enviroment: 'testing'\r\n//   },\r\n//   {\r\n//     key: '3',\r\n//     domain: 'https://static-inside-testing.medpro.com.vn',\r\n//     enviroment: 'testing'\r\n//   },\r\n// ];\r\n\r\n\r\nconst MyFormComponent = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  // const submitForm = ({ name, favoriteColor }) => {\r\n  //   console.log(name, favoriteColor);\r\n  //   form.resetFields();\r\n  // };\r\n\r\n  const onFinish = (values) => {\r\n    // console.log('Finish:', values);\r\n    form.resetFields();\r\n    props.addDomain({ ...values, partnerId: props.manageContent.partnerId })\r\n\r\n    // axios.post(`${currentEnv.DOMAIN_URL}/domainList`, {\r\n    //   partnerId: props.partnerId,\r\n    //   domainList: values\r\n    // })\r\n    //   .then(response => {\r\n    //     return axios.get(`${currentEnv.DOMAIN_URL}/domainList/${props.partnerId}`)\r\n    //   }).then(response => {\r\n    //     const data = response.data;\r\n    //     if (data.length > 0) {\r\n    //       if (data[0].domainList.length > 0) {\r\n    //         const tableData = data[0].domainList.map((element, index) => {\r\n    //           return {\r\n    //             key: (index + 1).toString(),\r\n    //             domain: element.domain,\r\n    //             enviroment: element.enviroment\r\n    //           }\r\n    //         })\r\n    //         // console.log(tableData)\r\n    //         this.setState({\r\n    //           data: tableData\r\n    //         })\r\n    //       }\r\n    //     }\r\n    //   }).catch(error => {\r\n    //     console.log(error)\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"enviroment\"\r\n        rules={[{ required: true, message: 'Can not be empty!' }]}\r\n      >\r\n        <Input placeholder=\"Enviroment\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"domain\"\r\n        rules={[{ required: true, message: 'Can not be empty!' }]}\r\n      >\r\n        <Input placeholder=\"Domain\" />\r\n      </Form.Item>\r\n      <Form.Item shouldUpdate={true}>\r\n        {() => (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            Add more\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapStateToPropsForm = state => ({\r\n  manageContent: state.manageContent,\r\n});\r\n\r\nconst mapDispatchToPropsForm = dispatch => ({\r\n  getDomainList: (partnerId) => {\r\n    dispatch(getDomainList(partnerId));\r\n  },\r\n  addDomain: (domain) => {\r\n    dispatch(addDomain(domain));\r\n  },\r\n});\r\n\r\nconst WrapperForm = connect(mapStateToPropsForm, mapDispatchToPropsForm)(MyFormComponent)\r\n\r\n\r\n\r\nclass DomainListTable extends React.Component {\r\n\r\n  state = {\r\n    // data: [],\r\n    enviromentValue: \"awdwad\",\r\n    domainValue: \"awdwd\",\r\n    editting: 0\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    // console.log(this.props.manageContent.partnerId)\r\n    // axios.get(`${currentEnv.DOMAIN_URL}/domainList/${this.props.manageContent.partnerId}`)\r\n    //   .then(response => {\r\n    //     // console.log(response.data);\r\n    //     const data = response.data\r\n    //     if (data.length > 0) {\r\n    //       if (data[0].domainList.length > 0) {\r\n    //         const tableData = data[0].domainList.map((element, index) => {\r\n    //           return {\r\n    //             key: (index + 1).toString(),\r\n    //             domain: element.domain,\r\n    //             enviroment: element.enviroment\r\n    //           }\r\n    //         })\r\n    //         this.setState({\r\n    //           data: tableData\r\n    //         })\r\n    //       }\r\n\r\n    //     }\r\n\r\n    //     // this.setState({\r\n    //     //   isLogin: response.data.isLogin\r\n    //     // })\r\n    //   }).catch(error => {\r\n    //     console.log(error)\r\n    //   });\r\n\r\n    this.props.getDomainList(this.props.manageContent.partnerId)\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n    // console.log(newProps)\r\n    if (newProps.manageContent.partnerId !== this.props.manageContent.partnerId) {\r\n      // console.log('abc');\r\n      // axios.get(`${currentEnv.DOMAIN_URL}/domainList/${newProps.manageContent.partnerId}`)\r\n      //   .then(response => {\r\n      //     // console.log(response.data);\r\n      //     const data = response.data\r\n      //     if (data.length > 0) {\r\n      //       if (data[0].domainList.length > 0) {\r\n      //         const tableData = data[0].domainList.map((element, index) => {\r\n      //           return {\r\n      //             key: (index + 1).toString(),\r\n      //             domain: element.domain,\r\n      //             enviroment: element.enviroment\r\n      //           }\r\n      //         })\r\n      //         this.setState({\r\n      //           data: tableData\r\n      //         })\r\n      //       } else {\r\n      //         this.setState({\r\n      //           data: []\r\n      //         })\r\n      //       }\r\n\r\n      //     } else {\r\n      //       this.setState({\r\n      //         data: []\r\n      //       })\r\n      //     }\r\n\r\n      //     // this.setState({\r\n      //     //   isLogin: response.data.isLogin\r\n      //     // })\r\n      //   }).catch(error => {\r\n      //     console.log(error)\r\n      //   });\r\n      this.props.getDomainList(newProps.manageContent.partnerId)\r\n\r\n    }\r\n  }\r\n\r\n  delete = (text) => {\r\n    console.log(text);\r\n    this.props.deleteDomain(text.key)\r\n  }\r\n\r\n  edit = (record) => {\r\n    console.log(record);\r\n    this.setState({\r\n      editting: record.key,\r\n      enviromentValue: record.enviroment,\r\n      domainValue: record.domain\r\n    })\r\n  }\r\n\r\n  // onFinish = values => {\r\n  //   console.log('Finish:', values);\r\n  //   console.log(this.props)\r\n  //   this.setState({\r\n  //     enviromentValue: \"\",\r\n  //     domainValue: \"\"\r\n  //   })\r\n  // };\r\n\r\n\r\n\r\n  submitEdit = (record) => {\r\n    console.log(this.state.enviromentValue);\r\n    console.log(this.state.domainValue);\r\n    this.props.editDomain({\r\n      _id: record.key,\r\n      enviroment: this.state.enviromentValue,\r\n      domain: this.state.domainValue\r\n    })\r\n    this.setState({\r\n      editting: \"0\"\r\n    })\r\n  }\r\n\r\n  cancelEdit = (record) => {\r\n    // console.log(record);\r\n    this.setState({\r\n      editting: \"0\"\r\n    })\r\n  }\r\n\r\n  onChangeDomain = (e) => {\r\n    // console.log(e.target.value)\r\n    this.setState({ domainValue: e.target.value })\r\n  }\r\n\r\n  onChangeEnviroment = (e) => {\r\n    // console.log(e.target.value)\r\n    this.setState({ enviromentValue: e.target.value })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // console.log(this.props.manageContent.domainList);\r\n    const tableData = this.props.manageContent.domainList.map((element, index) => {\r\n      return {\r\n        key: (element._id).toString(),\r\n        domain: element.domain,\r\n        enviroment: element.enviroment\r\n      }\r\n    })\r\n    return (\r\n      <div className=\"domain_list\">\r\n        <WrapperForm partnerId={this.props.manageContent.partnerId} />\r\n        <br />\r\n        <br />\r\n\r\n        <Table dataSource={tableData} pagination={false}>\r\n          <Column\r\n            title=\"Enviroment\"\r\n            dataIndex=\"enviroment\"\r\n            key=\"enviroment\"\r\n            width=\"300px\"\r\n            render={(text, record) => {\r\n              // const domain = record.domain\r\n              if (this.state.editting !== record.key) {\r\n                // console.log(this.state.editting)\r\n                // console.log(text)\r\n                return text\r\n              } else {\r\n                return <Input value={this.state.enviromentValue} onChange={this.onChangeEnviroment} size=\"middle\" />\r\n              }\r\n            }}\r\n          />\r\n          <Column\r\n            title=\"Domain\"\r\n            dataIndex=\"domain\"\r\n            key=\"domain\"\r\n            width=\"400px\"\r\n            render={(text, record) => {\r\n              // console.log(text)\r\n              // const domain = record.domain\r\n              if (this.state.editting !== record.key) {\r\n                // console.log(this.state.editting !== record.key)\r\n                // console.log(record.key)\r\n                return <a href={text}>{text}</a>\r\n              } else {\r\n                return <Input value={this.state.domainValue} onChange={this.onChangeDomain} size=\"middle\" />\r\n              }\r\n            }}\r\n          />\r\n          <Column\r\n            title=\"Action\"\r\n            key=\"action\"\r\n            render={(text, record) => {\r\n              if (this.state.editting !== text.key) {\r\n                return (\r\n                  <Space size=\"middle\">\r\n                    <a onClick={() => this.edit(record)}>Edit</a>\r\n                    {/* <a onClick={() => this.delete(text)}>Delete</a> */}\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.delete(text)}>\r\n                      <a>Delete</a>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                )\r\n              } else {\r\n                return (\r\n                  <Space size=\"middle\">\r\n                    <a onClick={() => this.submitEdit(record)}>Ok</a>\r\n                    <a onClick={() => this.cancelEdit(record)}>Cancel</a>\r\n                  </Space>\r\n                )\r\n              }\r\n            }}\r\n          />\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getDomainList: (partnerId) => {\r\n    dispatch(getDomainList(partnerId));\r\n  },\r\n  editDomain: (domain) => {\r\n    dispatch(editDomain(domain));\r\n  },\r\n  deleteDomain: (id) => {\r\n    dispatch(deleteDomain(id));\r\n  },\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DomainListTable);","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport { connect } from \"react-redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport UploadContent from \"../../components/UploadContent/UploadContent\";\r\n// import AppIconUpload from \"../../components/AppIconUpload/AppIconUpload\";\r\nimport UpdateMessage from \"../../components/UpdateMessage/UpdateMessage\";\r\nimport Select from \"../../components/Select/Select\";\r\nimport DomainListTable from \"../../components/DomainListTable/DomainListTable\";\r\n// import SelectSubfol from \"../../components/SelectSubfol/SelectSubfol\";\r\nimport { currentEnv } from \"../../configs\";\r\nimport { getManageContent, getDomainList } from \"../../store/ManageContent/manageContentActions\";\r\nimport \"./HospitalContent.css\"\r\nimport axios from \"axios\";\r\n\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nclass HospitalContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogin: true,\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    // axios.post(`${currentEnv.DOMAIN_URL}/checkAuth`, {\r\n    //   token: localStorage.getItem('token')\r\n    // })\r\n    //   .then(response => {\r\n    //     this.setState({\r\n    //       isLogin: response.data.isLogin\r\n    //     })\r\n    //   })\r\n    //   .catch(error => {\r\n    //     this.setState({\r\n    //       isLogin: false\r\n    //     })\r\n    //   });\r\n\r\n\r\n    this.props.getManageContent(this.props.manageContent.partnerId)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // onFinish = values => {\r\n  //   console.log('Success:', values);\r\n  // };\r\n\r\n  // onFinishFailed = errorInfo => {\r\n  //   console.log('Failed:', errorInfo);\r\n  // };\r\n\r\n\r\n\r\n  showAvatar = (list) => {\r\n\r\n    const result = list.map((item, index) => {\r\n      if (item.fieldName !== 'content') {\r\n        return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n          <Avatar\r\n            label={item.label}\r\n            name={item.name}\r\n            hospital={this.props.manageContent.partnerId}\r\n            type={item.type}\r\n            fieldName={item.fieldName}\r\n            typeUrl={item.typeUrl}\r\n          />\r\n        </Col >\r\n      }\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // delete = (text) => {\r\n  //   console.log(text)\r\n  // }\r\n\r\n  // edit = (record) => {\r\n  //   console.log(record)\r\n  // }\r\n\r\n\r\n  render() {\r\n\r\n    const formUploadItem = this.props.manageContent.content.length > 0 ? this.props.manageContent.content : []\r\n\r\n    return (\r\n\r\n      <Row justify=\"center\">\r\n        <Col xs={24} sm={24} md={24} lg={22}>\r\n          <Row gutter={[0, 32]}>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n              <Row justify=\"center\">\r\n                <Col xs={24} sm={24} md={22} lg={8}>\r\n                  <Select changeHospital={this.changeHospital} default={this.props.manageContent.partnerId} />\r\n\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={16}>\r\n                  <UpdateMessage />\r\n\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n              <div className=\"hospital_image\">\r\n                <Row>\r\n                  {this.showAvatar(formUploadItem)}\r\n                  <Col xs={24} sm={12} md={8} lg={4}>\r\n                    <UploadContent\r\n                      label=\"content.json\"\r\n                      name=\"content\"\r\n                      hospital={this.props.manageContent.partnerId}\r\n                      type=\"application/json\"\r\n                      fieldName=\"content\"\r\n                      action=\"upload\"\r\n                    // typeUrl={item.typeUrl}\r\n                    />\r\n\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n\r\n              <DomainListTable />\r\n\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n  subfolAppIcons: state.subfolAppIcons\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getManageContent: (partnerId) => {\r\n    dispatch(getManageContent(partnerId));\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HospitalContent);","import * as types from \"./subfolAppIconsTypes\";\r\n\r\n\r\nexport const listFile = (subfol) => {\r\n  return {\r\n    type: types.GET_LIST_FILE,\r\n    payload: subfol\r\n  };\r\n};\r\n\r\nexport const newListFile = () => {\r\n  return {\r\n    type: types.GET_NEW_LIST_FILE,\r\n  };\r\n};\r\n\r\nexport const listSubFol = () => {\r\n  return {\r\n    type: types.GET_SUBFOL_LIST,\r\n  };\r\n};","// export const SELECT_SUBFOL_APP_ICONS = \"SELECT_SUBFOL_APP_ICONS\";s\r\nexport const GET_LIST_FILE = \"GET_LIST_FILE\";\r\nexport const GET_LIST_FILE_SUCCESS = \"GET_LIST_FILE_SUCCESS\";\r\nexport const GET_LIST_FILE_FAIL = \"GET_LIST_FILE_FAIL\";\r\n\r\nexport const GET_NEW_LIST_FILE = \"GET_NEW_LIST_FILE\";\r\nexport const GET_NEW_LIST_FILE_SUCCESS = \"GET_NEW_LIST_FILE_SUCCESS\";\r\nexport const GET_NEW_LIST_FILE_FAIL = \"GET_NEW_LIST_FILE_FAIL\";\r\n\r\nexport const GET_SUBFOL_LIST = \"GET_SUBFOL_LIST\";\r\nexport const GET_SUBFOL_LIST_SUCCESS = \"GET_SUBFOL_LIST_SUCCESS\";\r\nexport const GET_SUBFOL_LIST_FAIL = \"GET_SUBFOL_LIST_FAIL\";\r\n","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { listFile, newListFile } from \"../../store/SubfolAppIcons/subfolAppIconsActions\";\r\n\r\n\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass AppIconUpload extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${this.props.name}`,\r\n    // isOnSize: false\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n    const subFol = newProps.subfol.replace(/-/g, \"/\")\r\n    this.setState({\r\n      imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${subFol}/${newProps.name}?${new Date().getTime()}`\r\n    })\r\n  }\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.setState({\r\n          imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${this.props.name}?${new Date().getTime()}`,\r\n          loading: false,\r\n        })\r\n\r\n        // console.log(info.file.originFileObj.name)\r\n        // if (this.props.uploadDone) {\r\n        //   this.props.uploadDone(info.file.originFileObj.name)\r\n        // }\r\n\r\n      });\r\n      if (!this.props.name) {\r\n        // console.log(this.props.subfol.replace(/\\//g, \"-\").slice(8))\r\n        this.props.getNewListFile();\r\n      }\r\n\r\n    }\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  beforeUpload = file => {\r\n    const isCorrectType = file.type === \"image/png\" || file.type === \"image/svg+xml\" || file.type === \"application/json\" || file.type === \"image/jpeg\";\r\n    if (!isCorrectType) {\r\n      message.error(`You can only upload image/png, image/svg+xml, image/jpeg or application/json file!`);\r\n    }\r\n    var sameType = true;\r\n    if (this.props.name) {\r\n      if (file.name.split(\".\").slice(-1)[0] !== this.props.name.split(\".\").slice(-1)[0]) {\r\n        var sameType = false;\r\n        message.error(`Have to be the same type!`);\r\n      }\r\n    }\r\n\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt5M) {\r\n      message.error('Image must smaller than 5MB!');\r\n    }\r\n\r\n    return isCorrectType && isLt5M && sameType\r\n  }\r\n\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/${this.props.action}`}\r\n          headers={{ name: this.props.name, subfol: this.props.subfol.replace(/-/g, \"/\"), token: `${localStorage.getItem('token')}` }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getListFile: () => {\r\n    dispatch(listFile());\r\n  },\r\n  getNewListFile: () => {\r\n    dispatch(newListFile());\r\n  },\r\n\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(AppIconUpload));","import React from 'react';\r\nimport { Select } from 'antd';\r\nimport { connect } from \"react-redux\";\r\n// import { getHospitalList } from \"../../store/HospitalList/hospitalListActions\";\r\nimport { listFile, listSubFol } from \"../../store/SubfolAppIcons/subfolAppIconsActions\";\r\n\r\n// const subfol = [\r\n//   {\r\n//     value: \"image\",\r\n//     name: \"image\"\r\n//   },\r\n//   {\r\n//     value: \"icons\",\r\n//     name: \"icons\"\r\n//   },\r\n//   {\r\n//     value: \"icons-chat\",\r\n//     name: \"icons/chat\"\r\n//   }\r\n// ]\r\n\r\n// console.log(hospitalList)\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectSubfol extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.getListFile(this.props.subfolAppIcons.subfolAppIcons)\r\n    this.props.listSubFol()\r\n  }\r\n  handleChange = (value) => {\r\n    this.props.getListFile(value);\r\n\r\n  }\r\n\r\n  showOption = (list) => {\r\n\r\n    const result = list.map((item, index) => {\r\n      return <Option value={item.value} key={index}>{item.name}</Option>\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.subfolAppIcons)\r\n    const arrSubfol = this.props.subfolAppIcons.listSubFol.map((ele, index) => {\r\n      const name = ele.slice(22).length > 0 ? ele.slice(22) : '(root)'\r\n      return { value: ele.replace(/\\//g, \"-\").slice(22), name: name }\r\n    })\r\n\r\n    return (\r\n      <Select defaultValue={this.props.subfolAppIcons.subfolAppIcons} style={{ width: 320 }} onChange={this.handleChange} size={\"middle\"}>\r\n        {this.showOption(arrSubfol)}\r\n      </Select>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { subfolAppIcons } = state;\r\n  return { subfolAppIcons };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getListFile: (subfol) => {\r\n    dispatch(listFile(subfol));\r\n  },\r\n  listSubFol: () => {\r\n    dispatch(listSubFol());\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSubfol);","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\n\r\nimport { connect } from \"react-redux\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Avatar from \"../../components/Avatar/Avatar\";\r\n// import UploadContent from \"../../components/UploadContent/UploadContent\";\r\nimport AppIconUpload from \"../../components/AppIconUpload/AppIconUpload\";\r\n// import UpdateMessage from \"../../components/UpdateMessage/UpdateMessage\";\r\n// import Select from \"../../components/Select/Select\";\r\nimport SelectSubfol from \"../../components/SelectSubfol/SelectSubfol\";\r\n// import { currentEnv } from \"../../configs\";\r\nimport { getManageContent } from \"../../store/ManageContent/manageContentActions\";\r\nimport \"./AppIcon.css\"\r\n// import axios from \"axios\";\r\n\r\n\r\nclass AppIcon extends React.Component {\r\n  componentDidMount = () => {\r\n    // axios.post(`${currentEnv.DOMAIN_URL}/checkAuth`, {\r\n    //   token: localStorage.getItem('token')\r\n    // })\r\n    //   .then(response => {\r\n    //     this.setState({\r\n    //       isLogin: response.data.isLogin\r\n    //     })\r\n    //   })\r\n    //   .catch(error => {\r\n    //     this.setState({\r\n    //       isLogin: false\r\n    //     })\r\n    //   });\r\n\r\n\r\n    // this.props.getManageContent(this.props.manageContent.partnerId)\r\n  }\r\n\r\n\r\n\r\n  changeHospital = (value) => {\r\n    // localStorage.setItem('hospital', value);\r\n    // this.setState({\r\n    //   hospital: value\r\n    // })\r\n    // this.props.getManageContent(value)\r\n    // if (localStorage.getItem('needRefresh') === 'true') {\r\n    //   localStorage.setItem('needRefresh', 'false')\r\n    //   window.location.reload();\r\n    // }\r\n    // this.props.history.push('login')\r\n  }\r\n\r\n  // onFinish = values => {\r\n  //   console.log('Success:', values);\r\n  // };\r\n\r\n  // onFinishFailed = errorInfo => {\r\n  //   console.log('Failed:', errorInfo);\r\n  // };\r\n\r\n\r\n\r\n  // showAvatar = (list) => {\r\n\r\n  //   const result = list.map((item, index) => {\r\n  //     if (item.fieldName !== 'content') {\r\n  //       return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n  //         <Avatar\r\n  //           label={item.label}\r\n  //           name={item.name}\r\n  //           hospital={this.props.manageContent.partnerId}\r\n  //           type={item.type}\r\n  //           fieldName={item.fieldName}\r\n  //           typeUrl={item.typeUrl}\r\n  //         />\r\n  //       </Col >\r\n  //     }\r\n\r\n\r\n  //   })\r\n\r\n  //   return result\r\n  // }\r\n\r\n  showAppIconUpload = (list) => {\r\n    // console.log(this.props.subfolAppIcons.subfolAppIcons)\r\n    const result = list.map((item, index) => {\r\n\r\n      return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n        <AppIconUpload\r\n          label={item}\r\n          name={item}\r\n          fieldName=\"customUpload\"\r\n          action=\"customUpload\"\r\n          subfol={`AppIcon/${this.props.subfolAppIcons.subfolAppIcons}`}\r\n        />\r\n      </Col >\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n\r\n    // const isLogin = this.state.isLogin;\r\n\r\n    // const formUploadItem = this.props.manageContent.content.length > 0 ? this.props.manageContent.content : []\r\n    // console.log(this.props.manageContent.content)\r\n\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col xs={24} sm={24} md={24} lg={22}>\r\n          <Row>\r\n            {/* <Col xs={24} sm={24} md={16} lg={4} offset={6}>\r\n              <h1>App Icon</h1>\r\n            </Col> */}\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n              <Row justify=\"center\">\r\n                <SelectSubfol />\r\n              </Row>\r\n\r\n            </Col>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Col xs={24} sm={24} md={24} lg={24}>\r\n              <div className=\"image_appicon\">\r\n                <Row>\r\n                  {this.showAppIconUpload(this.props.subfolAppIcons.listFileAppIcons)}\r\n                  <Col xs={24} sm={12} md={8} lg={4}>\r\n                    <AppIconUpload\r\n                      label=\"New File\"\r\n                      fieldName=\"customUpload\"\r\n                      action=\"customUpload\"\r\n                      subfol={`AppIcon/${this.props.subfolAppIcons.subfolAppIcons}`}\r\n                    />\r\n                  </Col >\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row >\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n  subfolAppIcons: state.subfolAppIcons\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getManageContent: (partnerId) => {\r\n    dispatch(getManageContent(partnerId));\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppIcon);","import React from 'react';\r\nimport Login from './Page/Login/Login';\r\nimport HospitalContent from './Page/HospitalContent/HospitalContent';\r\nimport AppIcon from './Page/AppIcon/AppIcon';\r\n\r\nconst routes = [\r\n\r\n\t// {\r\n\t// \tpath: '/',\r\n\t// \texact: true,\r\n\t// \tmain: props => <FormContent {...props} />\r\n\t// },\r\n\t{\r\n\t\tpath: '/login',\r\n\t\texact: false,\r\n\t\tmain: props => <Login {...props} />\r\n\t},\r\n\t{\r\n\t\tpath: '/hospital-content',\r\n\t\texact: false,\r\n\t\tmain: props => <HospitalContent {...props} />\r\n\t},\r\n\t{\r\n\t\tpath: '/app-icon',\r\n\t\texact: false,\r\n\t\tmain: props => <AppIcon {...props} />\r\n\t}\r\n];\r\n\r\nexport default routes;","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport AntMenu from './components/Menu/Menu';\nimport { checkAuth } from './store/checkAuth/checkAuthActions';\nimport { Redirect } from \"react-router-dom\";\n\n// import FormContent from \"./Page/FormContent/FormContent\";\nimport routes from './routes';\nimport history from \"./history\";\n\nclass App extends React.Component {\n\n  componentDidMount = () => {\n    this.props.checkAuth()\n  }\n\n\n  showContentMenus = (routes) => {\n    var result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (<Route key={index} path={route.path} exact={route.exact} render={route.main} />)\n      })\n    }\n\n    return <Switch>{result}</Switch>\n  }\n\n  render() {\n    return (\n\n      <HashRouter history={history}>\n\n        <div className=\"App\">\n          <h1>PKH Content Management</h1>\n          <AntMenu />\n          <br />\n          <br />\n\n          {this.showContentMenus(routes)}\n          {this.props.isLogin ? null : <Redirect to={{\n            pathname: '/login',\n            // state: {\n            //   from: location\n            // }\n          }\n          } />}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({\n//   manageContent: state.manageContent,\n//   subfolAppIcons: state.subfolAppIcons\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  checkAuth: () => {\n    // console.log('abc')\n    dispatch(checkAuth());\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import * as types from \"./checkAuthTypes\";\r\n\r\n\r\nexport const checkAuth = () => {\r\n  return {\r\n    type: types.CHECK_AUTH,\r\n  };\r\n};","export const CHECK_AUTH = \"CHECK_AUTH\";\r\nexport const CHECK_AUTH_SUCCESS = \"CHECK_AUTH_SUCCESS\";\r\nexport const CHECK_AUTH_FAIL = \"CHECK_AUTH_FAIL\";\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\nexport const getHttpRequest = async url => axios.get(url);\r\nexport const postHttpRequestAsync = async (url, data) => axios.post(url, data);","import * as api from \"../../constantHelper/API\";\r\n\r\nexport const getHospitalListAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./hospitalListAPIs\";\r\nimport * as types from \"./hospitalListTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getHospitalList(data) {\r\n  try {\r\n    // const baseUrl = yield select(state => getBaseUrl(state.hospital));\r\n    const response = yield call(api.getHospitalListAPI, `${currentEnv.RESTFULL_API_URL_V2}/mongo/hospital/list`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      const shortData = data.map((item, index) => {\r\n        return { name: item.name, partnerId: item.partnerId }\r\n      })\r\n      yield put({ type: types.GET_HOSPITAL_LIST_SUCCESS, payload: shortData });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_HOSPITAL_LIST_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetHospitalList() {\r\n  yield takeLatest(types.GET_HOSPITAL_LIST, getHospitalList);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetHospitalList),\r\n  ]);\r\n}\r\n","import * as api from \"../../constantHelper/API\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getManageContentAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};\r\n\r\nexport const getHttpRequest = (url) => {\r\n  return api.getHttpRequest(url);\r\n}\r\n\r\nexport const postHttpRequestAsync = (url, data) => {\r\n  return api.postHttpRequestAsync(url, data);\r\n\r\n}\r\n\r\nexport const axiosConfig = (method, url, data) => {\r\n  return axios({\r\n    method,\r\n    url,\r\n    data\r\n  });\r\n\r\n}","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./manageContentAPIs\";\r\nimport * as types from \"./manageContentTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getManageContent(action) {\r\n\r\n  try {\r\n    const response = yield call(api.getManageContentAPI, `${currentEnv.DOMAIN_URL}/content/${action.partnerId}`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      const { data } = response;\r\n      const payload = data.imageManage ? data.imageManage : []\r\n      yield put({ type: types.GET_MANAGE_CONTENT_SUCCESS, payload });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_MANAGE_CONTENT_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetManageContent() {\r\n  yield takeLatest(types.GET_MANAGE_CONTENT, getManageContent);\r\n}\r\n\r\nfunction* getDomainList(action) {\r\n\r\n  try {\r\n    const response = yield call(api.getHttpRequest, `${currentEnv.DOMAIN_URL}/domainList/${action.partnerId}`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      // const payload = data.length > 0 ? data[0].domainList : []\r\n      // console.log(payload)\r\n      yield put({ type: types.GET_DOMAIN_LIST_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_DOMAIN_LIST_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetDomainList() {\r\n  yield takeLatest(types.GET_DOMAIN_LIST, getDomainList);\r\n}\r\n\r\nfunction* addDomain(action) {\r\n  console.log(action)\r\n  const partnerId = action.domain.partnerId;\r\n  // const domain = { ...action.domain }\r\n  // console.log(partnerId)\r\n  const data = { ...action.domain }\r\n\r\n  try {\r\n    const response = yield call(api.postHttpRequestAsync, `${currentEnv.DOMAIN_URL}/domainList`, data);\r\n    console.log(response)\r\n    if (response.status !== 201)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      // const { data } = response;\r\n      // console.log(data)\r\n      // const payload = data.length > 0 ? data[0].domainList : []\r\n      // console.log(payload)\r\n      // yield put({ type: types.ADD_DOMAIN_SUCCESS, payload });\r\n      yield put({ type: types.GET_DOMAIN_LIST, partnerId });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.ADD_DOMAIN_FAIL, error });\r\n  }\r\n}\r\nfunction* watchAddDomain() {\r\n  yield takeLatest(types.ADD_DOMAIN, addDomain);\r\n}\r\n\r\nfunction* editDomain(action) {\r\n  // console.log(action)\r\n  const partnerId = yield select(state => state.manageContent.partnerId);\r\n  // const partnerId = action.domain.partnerId;\r\n  // const domain = { ...action.domain }\r\n  // console.log(partnerId)\r\n  const data = { ...action.domain }\r\n\r\n  try {\r\n    const response = yield call(api.axiosConfig, \"put\", `${currentEnv.DOMAIN_URL}/domainList`, data);\r\n    // console.log(response)\r\n    if (response.status !== 200)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      // const { data } = response;\r\n      // console.log(data)\r\n      // const payload = data.length > 0 ? data[0].domainList : []\r\n      // console.log(payload)\r\n      // yield put({ type: types.ADD_DOMAIN_SUCCESS, payload });\r\n      yield put({ type: types.GET_DOMAIN_LIST, partnerId });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.EDIT_DOMAIN_FAIL, error });\r\n  }\r\n}\r\nfunction* watchEditDomain() {\r\n  yield takeLatest(types.EDIT_DOMAIN, editDomain);\r\n}\r\n\r\nfunction* deleteDomain(action) {\r\n  // console.log(action)\r\n  const partnerId = yield select(state => state.manageContent.partnerId);\r\n  // const partnerId = action.domain.partnerId;\r\n  // const domain = { ...action.domain }\r\n  // console.log(partnerId)\r\n  const id = action.id\r\n\r\n  try {\r\n    const response = yield call(api.axiosConfig, \"delete\", `${currentEnv.DOMAIN_URL}/domainList/${id}`);\r\n    // console.log(response)\r\n    if (response.status !== 200)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      // const { data } = response;\r\n      // console.log(data)\r\n      // const payload = data.length > 0 ? data[0].domainList : []\r\n      // console.log(payload)\r\n      // yield put({ type: types.ADD_DOMAIN_SUCCESS, payload });\r\n      yield put({ type: types.GET_DOMAIN_LIST, partnerId });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.DELETE_DOMAIN_FAIL, error });\r\n  }\r\n}\r\nfunction* watchDeleteDomain() {\r\n  yield takeLatest(types.DELETE_DOMAIN, deleteDomain);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetManageContent),\r\n    fork(watchGetDomainList),\r\n    fork(watchAddDomain),\r\n    fork(watchEditDomain),\r\n    fork(watchDeleteDomain),\r\n  ]);\r\n}\r\n","import * as api from \"../../constantHelper/API\";\r\n\r\nexport const getListFileAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./subfolAppIconsAPIs\";\r\nimport * as types from \"./subfolAppIconsTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getListFile(data) {\r\n\r\n  try {\r\n    const baseUrl = yield select(state => state.subfolAppIcons.subfolAppIcons);\r\n    // console.log(baseUrl)\r\n    // console.log(data)\r\n    const url = baseUrl.length > 0 ? `${currentEnv.DOMAIN_URL}/getListFile/client-upload-AppIcon-${baseUrl}` : `${currentEnv.DOMAIN_URL}/getListFile/client-upload-AppIcon`\r\n    const response = yield call(api.getListFileAPI, url);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      const shortData = data.filter(item => item)\r\n      yield put({ type: types.GET_LIST_FILE_SUCCESS, payload: shortData });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_LIST_FILE_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetListFile() {\r\n  yield takeLatest(types.GET_LIST_FILE, getListFile);\r\n}\r\n\r\nfunction* getNewListFile(data) {\r\n\r\n  try {\r\n    const baseUrl = yield select(state => state.subfolAppIcons.subfolAppIcons);\r\n    const listFileAppIcons = yield select(state => state.subfolAppIcons.listFileAppIcons);\r\n    // console.log(baseUrl)\r\n    // console.log(data)\r\n    const url = baseUrl.length > 0 ? `${currentEnv.DOMAIN_URL}/getListFile/client-upload-AppIcon-${baseUrl}` : `${currentEnv.DOMAIN_URL}/getListFile/client-upload-AppIcon`\r\n    const response = yield call(api.getListFileAPI, url);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      const shortData = data.filter(item => item)\r\n      // console.log(shortData)\r\n      // console.log(listFileAppIcons)\r\n      var common = listFileAppIcons.filter(x => shortData.indexOf(x) !== -1)\r\n      const newFile = [];\r\n      shortData.forEach((ele) => {\r\n        if (common.indexOf(ele) === -1) {\r\n          newFile.push(ele);\r\n\r\n        }\r\n      })\r\n      // console.log(shortData)\r\n      // if (newFile.length > 0) {\r\n      //   common.push(newFile)\r\n      // }\r\n\r\n      yield put({ type: types.GET_NEW_LIST_FILE_SUCCESS, payload: [...common, ...newFile] });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_NEW_LIST_FILE_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetNewListFile() {\r\n  yield takeLatest(types.GET_NEW_LIST_FILE, getNewListFile)\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getListSubfol(data) {\r\n\r\n  try {\r\n    // const baseUrl = yield select(state => state.subfolAppIcons.subfolAppIcons);\r\n    // console.log(baseUrl)\r\n    const response = yield call(api.getListFileAPI, `${currentEnv.DOMAIN_URL}/getSubFol/client-upload-AppIcon`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      // const shortData = data.filter(item => item)\r\n      yield put({ type: types.GET_SUBFOL_LIST_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_SUBFOL_LIST_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetListSubfol() {\r\n  yield takeLatest(types.GET_SUBFOL_LIST, getListSubfol);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetListFile),\r\n    fork(watchGetNewListFile),\r\n    fork(watchGetListSubfol),\r\n  ]);\r\n}\r\n","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"../../constantHelper/API\";\r\nimport * as types from \"./checkAuthTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* checkAuth(data) {\r\n  try {\r\n    // const baseUrl = yield select(state => getBaseUrl(state.hospital));\r\n    const response = yield call(api.postHttpRequestAsync, `${currentEnv.DOMAIN_URL}/checkAuth`, { token: localStorage.getItem('token') });\r\n    if (response.status !== 200) {\r\n      throw new Error(\"Lỗi server!\");\r\n    }\r\n\r\n    if (response) {\r\n      const { data } = response;\r\n      // const shortData = data.map((item, index) => {\r\n      //   return { name: item.name, partnerId: item.partnerId }\r\n      // })\r\n      yield put({ type: types.CHECK_AUTH_SUCCESS, payload: data.isLogin });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.CHECK_AUTH_FAIL });\r\n  }\r\n}\r\nfunction* watchCheckAuth() {\r\n  yield takeLatest(types.CHECK_AUTH, checkAuth);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchCheckAuth),\r\n  ]);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\n\r\nimport getHospitalList from \"./store/HospitalList/hospitalListSaga\";\r\nimport getManageContent from \"./store/ManageContent/manageContentSaga\";\r\nimport getListFile from \"./store/SubfolAppIcons/subfolAppIconsSaga\";\r\nimport checkAuth from \"./store/checkAuth/checkAuthSaga\";\r\n\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getHospitalList),\r\n    fork(getManageContent),\r\n    // fork(getManageContent),\r\n    fork(getListFile),\r\n    fork(checkAuth),\r\n    // fork(ZabbixAlertSaga),\r\n  ]);\r\n}\r\n","export const SAVE_FIELD_LOGIN = \"SAVE_FIELD_LOGIN\";\r\n","import * as types from \"./loginTypes\";\r\n\r\nconst initialState = {\r\n  username: { value: \"\" },\r\n  password: { value: \"\" }\r\n\r\n};\r\n\r\nexport default function loginReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.SAVE_FIELD_LOGIN:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./hospitalListTypes\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function hospitalListReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.GET_HOSPITAL_LIST:\r\n      return [\r\n        ...state,\r\n        // ...action.payload\r\n      ];\r\n    case types.GET_HOSPITAL_LIST_SUCCESS:\r\n      return [\r\n        // ...state,\r\n        ...action.payload\r\n      ];\r\n    case types.GET_HOSPITAL_LIST_FAIL:\r\n      return [\r\n        ...state,\r\n        // ...action.error\r\n      ];\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./manageContentTypes\";\r\n\r\nconst initialState = {\r\n  partnerId: localStorage.getItem('hospital') || \"dkkvangiang\",\r\n  content: [],\r\n  domainList: [],\r\n  error: \"\"\r\n};\r\n\r\nexport default function manageContentReducer(state = initialState, action = {}) {\r\n\r\n  switch (action.type) {\r\n\r\n    case types.GET_MANAGE_CONTENT:\r\n      return {\r\n        ...state,\r\n        partnerId: action.partnerId\r\n        // ...action.payload\r\n      };\r\n    case types.GET_MANAGE_CONTENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        content: action.payload\r\n      };\r\n    case types.GET_MANAGE_CONTENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: 'error'\r\n      };\r\n\r\n    // case types.GET_DOMAIN_LIST:\r\n    //   return {\r\n    //     ...state,\r\n    //     partnerId: action.partnerId\r\n    //     ...action.payload\r\n    //   };\r\n    case types.GET_DOMAIN_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        domainList: action.payload\r\n      };\r\n    case types.GET_DOMAIN_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: 'error'\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./subfolAppIconsTypes\";\r\n\r\nconst initialState = {\r\n  subfolAppIcons: \"image\",\r\n  listFileAppIcons: [],\r\n  listSubFol: []\r\n};\r\n\r\nexport default function manageContentReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.GET_LIST_FILE:\r\n      return {\r\n        ...state,\r\n        subfolAppIcons: action.payload\r\n      };\r\n\r\n    case types.GET_LIST_FILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listFileAppIcons: action.payload\r\n      };\r\n    case types.GET_LIST_FILE_FAIL:\r\n      return {\r\n        ...state,\r\n        error: 'error'\r\n      };\r\n\r\n    case types.GET_NEW_LIST_FILE:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case types.GET_NEW_LIST_FILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listFileAppIcons: action.payload\r\n      };\r\n    case types.GET_NEW_LIST_FILE_FAIL:\r\n      return {\r\n        ...state,\r\n        error: 'error'\r\n      };\r\n\r\n    case types.GET_SUBFOL_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listSubFol: action.payload\r\n      };\r\n    case types.GET_SUBFOL_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: 'error'\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport login from \"./store/Login/loginReducer\"\r\nimport hospitalList from \"./store/HospitalList/hospitalListReducer\"\r\nimport manageContent from \"./store/ManageContent/manageContentReducer\"\r\nimport subfolAppIcons from \"./store/SubfolAppIcons/subfolAppIconsReducer\"\r\nimport checkAuth from \"./store/checkAuth/checkAuthReducer\"\r\n\r\n\r\nexport default combineReducers({\r\n  login,\r\n  hospitalList,\r\n  manageContent,\r\n  subfolAppIcons,\r\n  checkAuth,\r\n\r\n});\r\n","import * as types from \"./checkAuthTypes\";\r\n\r\nconst initialState = false;\r\n\r\nexport default function checkAuthReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    // case types.CHECK_AUTH:\r\n    //   return state\r\n    case types.CHECK_AUTH_SUCCESS:\r\n      return action.payload.isLogin\r\n    case types.CHECK_AUTH_FAIL:\r\n      return false\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n// import appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n    // other store enhancers if any\n  )\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}