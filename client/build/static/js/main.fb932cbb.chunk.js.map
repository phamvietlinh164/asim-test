{"version":3,"sources":["configs/envs/development.js","configs/envs/production.js","configs/envs/testing.js","configs/envs/staging.js","configs/envs/index.js","configs/index.js","components/Avatar/Avatar.js","components/UploadContent/UploadContent.js","components/CustomUpload/CustomUpload.js","components/AppIconUpload/AppIconUpload.js","components/Select/Select.js","store/HospitalList/hospitalListActions.js","store/HospitalList/hospitalListTypes.js","components/SelectSubfol/SelectSubfol.js","store/SubfolAppIcons/subfolAppIconsActions.js","store/SubfolAppIcons/subfolAppIconsTypes.js","Page/FormContent/FormContent.js","store/ManageContent/manageContentActions.js","store/ManageContent/manageContentTypes.js","Page/Login/Login.js","routes.js","history.js","App.js","serviceWorker.js","constantHelper/API.js","store/HospitalList/hospitalListAPIs.js","store/HospitalList/hospitalListSaga.js","store/ManageContent/manageContentAPIs.js","store/ManageContent/manageContentSaga.js","store/SubfolAppIcons/subfolAppIconsAPIs.js","store/SubfolAppIcons/subfolAppIconsSaga.js","sagas.js","store/Login/loginReducer.js","store/HospitalList/hospitalListReducer.js","store/ManageContent/manageContentReducer.js","store/SubfolAppIcons/subfolAppIconsReducer.js","reducers.js","store/Login/loginTypes.js","index.js"],"names":["DOMAIN_URL","RESTFULL_API_URL_V2","COOKIE_EXPIRES","SOCKET_CHAT","window","location","origin","development","testing","staging","production","currentEnv","_envs","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","Avatar","state","loading","imageUrl","props","hospital","name","typeUrl","Date","getTime","isOnSize","handleChange","info","file","status","originFileObj","setState","response","statusCode","history","push","pathname","message","beforeUpload","Promise","resolve","reject","isJpgOrPng","type","error","isLt2M","size","Image","src","URL","createObjectURL","onload","width","UNSAFE_componentWillReceiveProps","newProps","uploadButton","this","LoadingOutlined","PlusOutlined","className","fieldName","listType","showUploadList","action","headers","token","localStorage","getItem","onChange","alt","style","maxHeight","maxWidth","label","React","Component","withRouter","UploadContent","fileList","slice","length","isJson","onClick","partnerId","manageContent","axios","url","method","responseType","then","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","catch","err","alert","multiple","UploadOutlined","icon","DownloadOutlined","connect","CustomUpload","componentWillReceiveProps","subfol","replace","fileName","uploadDone","isCorrectType","sameType","split","isLt5M","subFol","Option","SelectComponent","componentDidMount","getHospitalList","value","setItem","changeHospital","showOption","hospitalList","map","item","index","key","defaultValue","default","dispatch","SelectSubfol","selectSubfolAppIcons","subfolAppIcons","listSubFol","list","arrSubfol","ele","payload","FormContent","post","isLogin","getManageContent","e","target","availableAt","showAvatar","xs","sm","md","lg","showCustomUpload","AppIconUpload","formUploadItem","content","Fragment","Select","listFileAppIcons","placeholder","to","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","onFinish","values","username","password","console","log","onFinishFailed","errorInfo","initialValues","remember","Item","rules","required","Password","htmlType","routes","path","exact","main","createBrowserHistory","App","showContentMenus","route","render","Boolean","hostname","match","getHttpRequest","a","get","getHospitalListAPI","api","watchGetHospitalList","root","call","error_code","Error","shortData","put","takeLatest","all","fork","getManageContentAPI","watchGetManageContent","imageManage","getListFileAPI","getListFile","watchGetListFile","getListSubfol","watchGetListSubfol","select","baseUrl","filter","rootSaga","initialState","combineReducers","login","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb932cbb.chunk.js","sourcesContent":["export const DOMAIN_URL = \"http://localhost:6700\"\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n// console.log(window.location)\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\nexport const SOCKET_CHAT = \"wss://socket.pkh.vn/cable\";\r\n","export const DOMAIN_URL = window.location.origin;\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\n// export const RESTFULL_API_URL = `http://localhost:6700`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";","export const DOMAIN_URL = \"https://static-inside-testing.medpro.com.vn\";\r\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\r\n\r\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\r\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\r\n\r\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\r\n","export const DOMAIN_URL = \"https://static-inside-testing.medpro.com.vn\";\nexport const RESTFULL_API_URL_V2 = \"https://medpro-api-v2-testing.medpro.com.vn\"\n\n// export const RESTFULL_API_URL = `https://static-inside-testing.medpro.com.vn`;\nexport const COOKIE_EXPIRES = 43200; // 12*60*60; // 12 tiếng\n\n\nexport const SOCKET_CHAT = \"wss://alpha-api.medpro.com.vn/cable\";\n\n","import * as development from \"./development\";\r\nimport * as production from \"./production\";\r\nimport * as testing from \"./testing\";\r\nimport * as staging from \"./staging\";\r\n// export const URL_DOWNLOAD_IOS = `https://apps.apple.com/`;\r\nexport const URL_DOWNLOAD_IOS = `/`;\r\n// export const URL_DOWNLOAD_ANDROID = `https://play.google.com/`;\r\nexport const URL_DOWNLOAD_ANDROID = `/`;\r\nexport default {\r\n  development,\r\n  testing,\r\n  staging,\r\n  production\r\n};\r\n","import _envs from \"./envs\";\r\n\r\nexport const APP_NAME = \"crm\";\r\nexport const currentEnvName = process.env.REACT_APP_STAGE || \"development\";\r\nexport const envs = _envs;\r\nexport const currentEnv = _envs[currentEnvName];\r\nexport const HOSPITAL_ID = 2;\r\n","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}?${new Date().getTime()}`,\r\n    isOnSize: false\r\n  };\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.setState({\r\n          imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}?${new Date().getTime()}`,\r\n          loading: false,\r\n        })\r\n      }\r\n      );\r\n      // var newImage = new Image();\r\n      // newImage.src = `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${this.props.hospital}/${this.props.name}.${this.props.typeUrl}`;\r\n      // localStorage.setItem('needRefresh', \"true\");\r\n      // window.location.reload();\r\n\r\n\r\n    }\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  beforeUpload = file => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const isJpgOrPng = file.type === this.props.type;\r\n      if (!isJpgOrPng) {\r\n        message.error(`You can only upload ${this.props.type} file!`);\r\n      }\r\n      const isLt2M = file.size / 1024 / 1024 < 5;\r\n      if (!isLt2M) {\r\n        message.error('Image must smaller than 5MB!');\r\n      }\r\n\r\n      let img = new Image()\r\n      img.src = window.URL.createObjectURL(file)\r\n\r\n      img.onload = () => {\r\n        // alert(img.width + \" \" + img.height);\r\n        // console.log(img.width)\r\n        if (isJpgOrPng && isLt2M && img.width > 100) {\r\n          resolve(file);\r\n        } else {\r\n          reject('abc')\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  UNSAFE_componentWillReceiveProps = (newProps) => {\r\n\r\n    this.setState({ imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/hospitals/${newProps.hospital}/${newProps.name}.${this.props.typeUrl}` });\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/upload`}\r\n          headers={{ hospital: this.props.hospital, name: this.props.name, token: `${localStorage.getItem('token')}` }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Avatar);","import React from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n// import { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from 'axios';\r\nimport { currentEnv } from \"../../configs\";\r\nimport \"./UploadContent.css\"\r\n\r\nclass UploadContent extends React.Component {\r\n  state = {\r\n    fileList: [\r\n      // {\r\n      //   uid: '-1',\r\n      //   name: 'xxx.png',\r\n      //   status: 'done',\r\n      //   url: 'http://www.baidu.com/xxx.png',\r\n      // },\r\n    ],\r\n  };\r\n\r\n  handleChange = info => {\r\n\r\n    let fileList = [...info.fileList];\r\n\r\n    // 1. Limit the number of uploaded files\r\n    // Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    fileList = fileList.slice(-1);\r\n    // console.log(fileList)\r\n\r\n    if (fileList.length > 0) {\r\n      if (fileList[0].type !== this.props.type) {\r\n        fileList[0].status = 'error'\r\n      }\r\n    }\r\n    this.setState({ fileList });\r\n\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  beforeUpload = file => {\r\n    // console.log(file)\r\n    const isJson = file.type === this.props.type;\r\n    if (!isJson) {\r\n      message.error(`You can only upload ${this.props.type} file!`);\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt2M) {\r\n      message.error('File must smaller than 5MB!');\r\n    }\r\n\r\n    return isJson && isLt2M;\r\n  }\r\n\r\n  onClick = () => {\r\n    // console.log('abc')\r\n    // axios.get('http://localhost:6700/download/client-upload-hospitals-115-content.json').then(response => {\r\n    //   console.log(response)\r\n    // }).catch(err => {\r\n    //   console.log(err)\r\n    // })\r\n    // this.props.history.push('/abc')\r\n    // console.log(this.props.manageContent.partnerId)\r\n    const partnerId = this.props.manageContent.partnerId\r\n\r\n    axios({\r\n      url: `${currentEnv.DOMAIN_URL}/download/client-upload-hospitals-${partnerId}-content.json`, //your url\r\n      method: 'GET',\r\n      responseType: 'blob', // important\r\n    }).then((response) => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'content.json'); //or any other extension\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    }).catch(err => {\r\n      // console.log(err);\r\n      alert('Some error happen!')\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const props = {\r\n      name: this.props.fieldName,\r\n      action: `${currentEnv.DOMAIN_URL}/${this.props.action}`,\r\n      headers: { hospital: this.props.hospital, name: this.props.name, token: `${localStorage.getItem('token')}` },\r\n      onChange: this.handleChange,\r\n      beforeUpload: this.beforeUpload,\r\n      multiple: true,\r\n    };\r\n\r\n    return (\r\n\r\n      <div className=\"upload\">\r\n\r\n\r\n        <div className=\"up_cont\">\r\n          <Upload {...props} fileList={this.state.fileList}>\r\n            <Button>\r\n              <UploadOutlined /> Upload\r\n            </Button>\r\n          </Upload>\r\n          <div className=\"download-but\">\r\n\r\n\r\n            <Button type=\"primary\" icon={<DownloadOutlined />} size='small' onClick={this.onClick}>\r\n              Download\r\n          </Button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(UploadContent);","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass CustomUpload extends React.Component {\r\n  state = {\r\n    loading: false,\r\n\r\n    // isOnSize: false\r\n  };\r\n\r\n  componentWillReceiveProps = (newProps) => {\r\n    const subFol = newProps.subfol.replace(/-/g, \"/\")\r\n    // this.setState({\r\n    //   imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${subFol}/${newProps.name}?${new Date().getTime()}`\r\n    // })\r\n  }\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        // console.log(info.file.name)\r\n        const fileName = info.file.name;\r\n        this.setState({\r\n          imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${fileName}?${new Date().getTime()}`,\r\n          loading: false,\r\n        })\r\n        // console.log(info.file.originFileObj.name)\r\n        if (this.props.uploadDone) {\r\n          this.props.uploadDone(info.file.originFileObj.name);\r\n          this.setState({\r\n            imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${fileName}?${new Date().getTime()}`\r\n          })\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  beforeUpload = file => {\r\n    const isCorrectType = file.type === \"image/png\" || file.type === \"image/svg+xml\" || file.type === \"application/json\" || file.type === \"image/jpeg\";\r\n    if (!isCorrectType) {\r\n      message.error(`You can only upload image/png, image/svg+xml, image/jpeg or application/json file!`);\r\n    }\r\n    var sameType = true;\r\n    if (this.props.name) {\r\n      if (file.name.split(\".\").slice(-1)[0] !== this.props.name.split(\".\").slice(-1)[0]) {\r\n        var sameType = false;\r\n        message.error(`Have to be the same type!`);\r\n      }\r\n    }\r\n\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt5M) {\r\n      message.error('Image must smaller than 5MB!');\r\n    }\r\n\r\n    return isCorrectType && isLt5M && sameType\r\n  }\r\n\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/${this.props.action}`}\r\n          headers={{ name: this.props.name, subfol: this.props.subfol.replace(/-/g, \"/\"), token: `${localStorage.getItem('token')}` }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CustomUpload);","import React from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { currentEnv } from \"../../configs\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\n\r\nclass CustomUpload extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${this.props.name}`,\r\n    // isOnSize: false\r\n  };\r\n\r\n  componentWillReceiveProps = (newProps) => {\r\n    const subFol = newProps.subfol.replace(/-/g, \"/\")\r\n    this.setState({\r\n      imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${subFol}/${newProps.name}?${new Date().getTime()}`\r\n    })\r\n  }\r\n\r\n  handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        this.setState({\r\n          imageUrl: `${currentEnv.DOMAIN_URL}/static/upload/${this.props.subfol.replace(/-/g, \"/\")}/${this.props.name}?${new Date().getTime()}`,\r\n          loading: false,\r\n        })\r\n        // console.log(info.file.originFileObj.name)\r\n        if (this.props.uploadDone) {\r\n          this.props.uploadDone(info.file.originFileObj.name)\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n    if (info.file.status === 'error') {\r\n      // Get this url from response in real world.\r\n      if (info.file.response.statusCode === 401) {\r\n        this.props.history.push({\r\n          pathname: '/login',\r\n          state: { message: \"Login to upload!\" }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  beforeUpload = file => {\r\n    const isCorrectType = file.type === \"image/png\" || file.type === \"image/svg+xml\" || file.type === \"application/json\" || file.type === \"image/jpeg\";\r\n    if (!isCorrectType) {\r\n      message.error(`You can only upload image/png, image/svg+xml, image/jpeg or application/json file!`);\r\n    }\r\n    var sameType = true;\r\n    if (this.props.name) {\r\n      if (file.name.split(\".\").slice(-1)[0] !== this.props.name.split(\".\").slice(-1)[0]) {\r\n        var sameType = false;\r\n        message.error(`Have to be the same type!`);\r\n      }\r\n    }\r\n\r\n    const isLt5M = file.size / 1024 / 1024 < 5;\r\n    if (!isLt5M) {\r\n      message.error('Image must smaller than 5MB!');\r\n    }\r\n\r\n    return isCorrectType && isLt5M && sameType\r\n  }\r\n\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { imageUrl } = this.state;\r\n\r\n    return (\r\n      <div className=\"upload\">\r\n        <Upload\r\n          name={this.props.fieldName}\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action={`${currentEnv.DOMAIN_URL}/${this.props.action}`}\r\n          headers={{ name: this.props.name, subfol: this.props.subfol.replace(/-/g, \"/\"), token: `${localStorage.getItem('token')}` }}\r\n          beforeUpload={this.beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\" style={{ maxHeight: '86px', maxWidth: '86px' }} /> : uploadButton}\r\n        </Upload>\r\n        <p>{this.props.label}</p><br />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CustomUpload);","import React from 'react';\r\nimport { Select } from 'antd';\r\n// import { selectObject } from \"./select-config\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHospitalList } from \"../../store/HospitalList/hospitalListActions\";\r\n\r\n\r\n\r\n// console.log(hospitalList)\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectComponent extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.getHospitalList()\r\n  }\r\n  handleChange = (value) => {\r\n    localStorage.setItem('hospital', value)\r\n    this.props.changeHospital(value)\r\n  }\r\n\r\n  showOption = () => {\r\n    // console.log(this.props.hospitalList)\r\n    const result = this.props.hospitalList.map((item, index) => {\r\n      return <Option value={item.partnerId} key={index}>{item.name}</Option>\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.hospitalList)\r\n    return (\r\n      <Select defaultValue={this.props.default} style={{ width: 320 }} onChange={this.handleChange} size={\"middle\"}>\r\n        {this.showOption()}\r\n      </Select>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { hospitalList } = state;\r\n  return { hospitalList };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getHospitalList: () => {\r\n    dispatch(getHospitalList());\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectComponent);","import * as types from \"./hospitalListTypes\";\r\n\r\n\r\nexport const getHospitalList = () => {\r\n  return {\r\n    type: types.GET_HOSPITAL_LIST,\r\n  };\r\n};\r\n\r\n","export const GET_HOSPITAL_LIST = \"GET_HOSPITAL_LIST\";\r\nexport const GET_HOSPITAL_LIST_SUCCESS = \"GET_HOSPITAL_LIST_SUCCESS\";\r\nexport const GET_HOSPITAL_LIST_FAIL = \"GET_HOSPITAL_LIST_FAIL\";\r\n\r\n\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n// import { selectObject } from \"./select-config\";\r\nimport { connect } from \"react-redux\";\r\n// import { getHospitalList } from \"../../store/HospitalList/hospitalListActions\";\r\nimport { selectSubfolAppIcons, listSubFol } from \"../../store/SubfolAppIcons/subfolAppIconsActions\";\r\n\r\nconst subfol = [\r\n  {\r\n    value: \"image\",\r\n    name: \"image\"\r\n  },\r\n  {\r\n    value: \"icons\",\r\n    name: \"icons\"\r\n  },\r\n  {\r\n    value: \"icons-chat\",\r\n    name: \"icons/chat\"\r\n  }\r\n]\r\n\r\n// console.log(hospitalList)\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass SelectSubfol extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.selectSubfolAppIcons(this.props.subfolAppIcons.subfolAppIcons)\r\n    this.props.listSubFol()\r\n  }\r\n  handleChange = (value) => {\r\n    // this.props.changeHospital(`${value}`)\r\n    // console.log(value)\r\n    this.props.selectSubfolAppIcons(value);\r\n\r\n  }\r\n\r\n  showOption = (list) => {\r\n\r\n    const result = list.map((item, index) => {\r\n      return <Option value={item.value} key={index}>{item.name}</Option>\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.subfolAppIcons)\r\n    const arrSubfol = this.props.subfolAppIcons.listSubFol.map((ele, index) => {\r\n      const name = ele.slice(22).length > 0 ? ele.slice(22) : '(root)'\r\n      return { value: ele.replace(/\\//g, \"-\").slice(22), name: name }\r\n    })\r\n    return (\r\n      <Select defaultValue={this.props.subfolAppIcons.subfolAppIcons} style={{ width: 320 }} onChange={this.handleChange} size={\"middle\"}>\r\n        {this.showOption(arrSubfol)}\r\n      </Select>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { subfolAppIcons } = state;\r\n  return { subfolAppIcons };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectSubfolAppIcons: (subfol) => {\r\n    dispatch(selectSubfolAppIcons(subfol));\r\n  },\r\n  listSubFol: () => {\r\n    dispatch(listSubFol());\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSubfol);","import * as types from \"./subfolAppIconsTypes\";\r\n\r\n\r\nexport const selectSubfolAppIcons = (subfol) => {\r\n  return {\r\n    type: types.SELECT_SUBFOL_APP_ICONS,\r\n    payload: subfol\r\n  };\r\n};\r\n\r\nexport const listSubFol = () => {\r\n  return {\r\n    type: types.GET_SUBFOL_LIST,\r\n  };\r\n};","export const SELECT_SUBFOL_APP_ICONS = \"SELECT_SUBFOL_APP_ICONS\";\r\nexport const GET_LIST_FILE = \"GET_LIST_FILE\";\r\nexport const GET_LIST_FILE_SUCCESS = \"GET_LIST_FILE_SUCCESS\";\r\nexport const GET_LIST_FILE_FAIL = \"GET_LIST_FILE_FAIL\";\r\n\r\nexport const GET_SUBFOL_LIST = \"GET_SUBFOL_LIST\";\r\nexport const GET_SUBFOL_LIST_SUCCESS = \"GET_SUBFOL_LIST_SUCCESS\";\r\nexport const GET_SUBFOL_LIST_FAIL = \"GET_SUBFOL_LIST_FAIL\";\r\n","import React from 'react';\r\nimport { Row, Col, Input, Button } from 'antd';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport UploadContent from \"../../components/UploadContent/UploadContent\";\r\nimport CustomUpload from \"../../components/CustomUpload/CustomUpload\";\r\nimport AppIconUpload from \"../../components/AppIconUpload/AppIconUpload\";\r\nimport Select from \"../../components/Select/Select\";\r\nimport SelectSubfol from \"../../components/SelectSubfol/SelectSubfol\";\r\nimport { currentEnv } from \"../../configs\";\r\nimport { getManageContent } from \"../../store/ManageContent/manageContentActions\";\r\nimport \"./FormContent.css\"\r\nimport axios from \"axios\";\r\n\r\nclass FormContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hospital: localStorage.getItem('hospital') || \"dkkvangiang\",\r\n      isLogin: true,\r\n      subfol: \"\",\r\n      availableAt: \"\"\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    axios.post(`${currentEnv.DOMAIN_URL}/checkAuth`, {\r\n      token: localStorage.getItem('token')\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          isLogin: response.data.isLogin\r\n        })\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLogin: false\r\n        })\r\n      });\r\n    // console.log(this.state.hospital)\r\n\r\n    this.props.getManageContent(this.state.hospital)\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      subfol: e.target.value\r\n    })\r\n  }\r\n\r\n  uploadDone = (fileName) => {\r\n    this.setState({\r\n      availableAt: `${currentEnv.DOMAIN_URL}/static/upload/${this.state.subfol}/${fileName}`\r\n    })\r\n  }\r\n\r\n  changeHospital = (value) => {\r\n    // localStorage.setItem('hospital', value);\r\n    this.setState({\r\n      hospital: value\r\n    })\r\n    this.props.getManageContent(value)\r\n    // if (localStorage.getItem('needRefresh') === 'true') {\r\n    //   localStorage.setItem('needRefresh', 'false')\r\n    //   window.location.reload();\r\n    // }\r\n    // this.props.history.push('login')\r\n  }\r\n\r\n  // onFinish = values => {\r\n  //   console.log('Success:', values);\r\n  // };\r\n\r\n  // onFinishFailed = errorInfo => {\r\n  //   console.log('Failed:', errorInfo);\r\n  // };\r\n\r\n\r\n\r\n  showAvatar = (list) => {\r\n\r\n    const result = list.map((item, index) => {\r\n      if (item.fieldName !== 'content') {\r\n        return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n          <Avatar\r\n            label={item.label}\r\n            name={item.name}\r\n            hospital={this.state.hospital}\r\n            type={item.type}\r\n            fieldName={item.fieldName}\r\n            typeUrl={item.typeUrl}\r\n          />\r\n        </Col >\r\n      }\r\n\r\n\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  showCustomUpload = (list) => {\r\n    // console.log(this.props.subfolAppIcons.subfolAppIcons)\r\n    const result = list.map((item, index) => {\r\n\r\n      return <Col xs={24} sm={12} md={8} lg={4} key={index}>\r\n        <AppIconUpload\r\n          label={item}\r\n          name={item}\r\n          fieldName=\"customUpload\"\r\n          action=\"customUpload\"\r\n          subfol={`AppIcon/${this.props.subfolAppIcons.subfolAppIcons}`}\r\n        />\r\n      </Col >\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  render() {\r\n\r\n    const isLogin = this.state.isLogin;\r\n    const hospital = this.state.hospital\r\n    const formUploadItem = this.props.manageContent.content.length > 0 ? this.props.manageContent.content : []\r\n    // console.log(this.props.manageContent.content)\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          !isLogin ? <Redirect to={{\r\n            pathname: '/login',\r\n            // state: {\r\n            //   from: location\r\n            // }\r\n          }\r\n          } /> :\r\n            <div>\r\n\r\n              <br />\r\n              <br />\r\n              <Row>\r\n                <Col xs={24} sm={24} md={24} lg={24}>\r\n                  <h1>Hospitals Content</h1>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={24}>\r\n                  <Select changeHospital={this.changeHospital} default={this.state.hospital} />\r\n                </Col>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {this.showAvatar(formUploadItem)}\r\n                <Col xs={24} sm={12} md={8} lg={4}>\r\n                  <UploadContent\r\n                    label=\"content.json\"\r\n                    name=\"content\"\r\n                    hospital={this.state.hospital}\r\n                    type=\"application/json\"\r\n                    fieldName=\"content\"\r\n                    action=\"upload\"\r\n                  // typeUrl={item.typeUrl}\r\n                  />\r\n\r\n                </Col>\r\n\r\n              </Row>\r\n\r\n\r\n\r\n              <Row>\r\n                <Col xs={24} sm={24} md={24} lg={24}>\r\n                  <h1>App Icon</h1>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={24}><SelectSubfol /></Col>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {this.showCustomUpload(this.props.subfolAppIcons.listFileAppIcons)}\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n              </Row>\r\n              <Row>\r\n                <Col xs={24} sm={24} md={24} lg={24}>\r\n                  <h1>Custom Upload</h1>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={8} lg={4}>\r\n                  <CustomUpload\r\n                    label=\"Upload\"\r\n                    fieldName=\"customUpload\"\r\n                    action=\"customUpload\"\r\n                    subfol={this.state.subfol}\r\n                    uploadDone={this.uploadDone}\r\n                  // typeUrl={item.typeUrl}\r\n                  />\r\n\r\n                </Col>\r\n                <Col xs={24} sm={12} md={8} lg={4}>\r\n                  <Input placeholder=\"Basic usage\" onChange={this.onChange} />\r\n                  <p>{this.state.availableAt}</p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  manageContent: state.manageContent,\r\n  subfolAppIcons: state.subfolAppIcons\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getManageContent: (partnerId) => {\r\n    dispatch(getManageContent(partnerId));\r\n  },\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContent);","import * as types from \"./manageContentTypes\";\r\n\r\n\r\nexport const getManageContent = (partnerId) => {\r\n  // console.log(123);\r\n  return {\r\n    type: types.GET_MANAGE_CONTENT,\r\n    partnerId\r\n  };\r\n};","export const GET_MANAGE_CONTENT = \"GET_MANAGE_CONTENT\";\r\nexport const GET_MANAGE_CONTENT_SUCCESS = \"GET_MANAGE_CONTENT_SUCCESS\";\r\nexport const GET_MANAGE_CONTENT_FAIL = \"GET_MANAGE_CONTENT_FAIL\";\r\nexport const SET_PARTNERID = \"SET_PARTNERID\";\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport { currentEnv } from \"../../configs\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\n\r\nclass Login extends React.Component {\r\n  onFinish = values => {\r\n    // console.log('Success:', values);\r\n    axios.post(`${currentEnv.DOMAIN_URL}/login`, {\r\n      username: values.username,\r\n      password: values.password\r\n    })\r\n      .then(response => {\r\n        // console.log(response.data)\r\n        if (response.data) {\r\n          localStorage.setItem('token', response.data);\r\n          this.props.history.push('/')\r\n        } else {\r\n          alert('Wrong username or password!')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Some error have happened!')\r\n      });\r\n  };\r\n\r\n  onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.location.state) {\r\n      if (this.props.location.state.message) {\r\n        alert(this.props.location.state.message)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={this.onFinish}\r\n          onFinishFailed={this.onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react';\r\nimport FormContent from './Page/FormContent/FormContent';\r\nimport Login from './Page/Login/Login';\r\n\r\nconst routes = [\r\n\r\n\t{\r\n\t\tpath: '/',\r\n\t\texact: true,\r\n\t\tmain: props => <FormContent {...props} />\r\n\t},\r\n\t{\r\n\t\tpath: '/login',\r\n\t\texact: false,\r\n\t\tmain: props => <Login {...props} />\r\n\t}\r\n];\r\n\r\nexport default routes;","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router, HashRouter } from 'react-router-dom';\n// import FormContent from \"./Page/FormContent/FormContent\";\nimport routes from './routes';\nimport history from \"./history\";\n\nclass App extends React.Component {\n\n\n  showContentMenus = (routes) => {\n    var result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (<Route key={index} path={route.path} exact={route.exact} render={route.main} />)\n      })\n    }\n\n    return <Switch>{result}</Switch>\n  }\n\n  render() {\n    return (\n\n      <HashRouter history={history}>\n        <div className=\"App\">\n          {this.showContentMenus(routes)}\n\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\nexport const getHttpRequest = async url => axios.get(url);\r\nexport const postHttpRequestAsync = async (url, data = {}, config = {}) => axios.post(url, data, config);","import * as api from \"../../constantHelper/API\";\r\n\r\nexport const getHospitalListAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./hospitalListAPIs\";\r\nimport * as types from \"./hospitalListTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getHospitalList(data) {\r\n  try {\r\n    // const baseUrl = yield select(state => getBaseUrl(state.hospital));\r\n    const response = yield call(api.getHospitalListAPI, `${currentEnv.RESTFULL_API_URL_V2}/mongo/hospital/list`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      const shortData = data.map((item, index) => {\r\n        return { name: item.name, partnerId: item.partnerId }\r\n      })\r\n      yield put({ type: types.GET_HOSPITAL_LIST_SUCCESS, payload: shortData });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_HOSPITAL_LIST_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetHospitalList() {\r\n  yield takeLatest(types.GET_HOSPITAL_LIST, getHospitalList);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetHospitalList),\r\n  ]);\r\n}\r\n","import * as api from \"../../constantHelper/API\";\r\n\r\nexport const getManageContentAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./manageContentAPIs\";\r\nimport * as types from \"./manageContentTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getManageContent(action) {\r\n  // console.log(action)\r\n\r\n  try {\r\n    // const manageContent = yield select(state => state.manageContent);\r\n    // console.log(manageContent)\r\n    const response = yield call(api.getManageContentAPI, `${currentEnv.DOMAIN_URL}/content/${action.partnerId}`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data.imageManage);\r\n      const payload = data.imageManage ? data.imageManage : []\r\n      // const shortData = data.map((item, index) => {\r\n      //   return { name: item.name, partnerId: item.partnerId }\r\n      // })\r\n      yield put({ type: types.GET_MANAGE_CONTENT_SUCCESS, payload });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_MANAGE_CONTENT_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetManageContent() {\r\n  yield takeLatest(types.GET_MANAGE_CONTENT, getManageContent);\r\n}\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetManageContent),\r\n  ]);\r\n}\r\n","import * as api from \"../../constantHelper/API\";\r\n\r\nexport const getListFileAPI = (url) => {\r\n  return api.getHttpRequest(url);\r\n};","import { put, call, fork, all, takeLatest, select } from \"redux-saga/effects\";\r\nimport * as api from \"./subfolAppIconsAPIs\";\r\nimport * as types from \"./subfolAppIconsTypes\"\r\nimport { currentEnv } from \"../../configs\";\r\n\r\n\r\n\r\n\r\nfunction* getListFile(data) {\r\n\r\n  try {\r\n    const baseUrl = yield select(state => state.subfolAppIcons.subfolAppIcons);\r\n    // console.log(baseUrl)\r\n    const response = yield call(api.getListFileAPI, `${currentEnv.DOMAIN_URL}/getListFile/client-upload-AppIcon-${baseUrl}`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      const shortData = data.filter(item => item)\r\n      yield put({ type: types.GET_LIST_FILE_SUCCESS, payload: shortData });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_LIST_FILE_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetListFile() {\r\n  yield takeLatest(types.SELECT_SUBFOL_APP_ICONS, getListFile);\r\n}\r\n\r\n\r\nfunction* getListSubfol(data) {\r\n\r\n  try {\r\n    // const baseUrl = yield select(state => state.subfolAppIcons.subfolAppIcons);\r\n    // console.log(baseUrl)\r\n    const response = yield call(api.getListFileAPI, `${currentEnv.DOMAIN_URL}/getSubFol/client-upload-AppIcon`);\r\n    if (response.status !== 200 || response.data.error_code)\r\n      throw new Error(\"Lỗi server!\");\r\n    if (response) {\r\n      const { data } = response;\r\n      // console.log(data)\r\n      // const shortData = data.filter(item => item)\r\n      yield put({ type: types.GET_SUBFOL_LIST_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: types.GET_SUBFOL_LIST_FAIL, error });\r\n  }\r\n}\r\nfunction* watchGetListSubfol() {\r\n  yield takeLatest(types.GET_SUBFOL_LIST, getListSubfol);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    fork(watchGetListFile),\r\n    fork(watchGetListSubfol),\r\n  ]);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\n\r\nimport getHospitalList from \"./store/HospitalList/hospitalListSaga\";\r\nimport getManageContent from \"./store/ManageContent/manageContentSaga\";\r\nimport getListFile from \"./store/SubfolAppIcons/subfolAppIconsSaga\";\r\n\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getHospitalList),\r\n    fork(getManageContent),\r\n    // fork(getManageContent),\r\n    fork(getListFile),\r\n    // fork(ZabbixAlertSaga),\r\n  ]);\r\n}\r\n","import * as types from \"./loginTypes\";\r\n\r\nconst initialState = {\r\n  username: { value: \"\" },\r\n  password: { value: \"\" }\r\n\r\n};\r\n\r\nexport default function loginReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.SAVE_FIELD_LOGIN:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./hospitalListTypes\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function hospitalListReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.GET_HOSPITAL_LIST:\r\n      return [\r\n        ...state,\r\n        // ...action.payload\r\n      ];\r\n    case types.GET_HOSPITAL_LIST_SUCCESS:\r\n      return [\r\n        // ...state,\r\n        ...action.payload\r\n      ];\r\n    case types.GET_HOSPITAL_LIST_FAIL:\r\n      return [\r\n        ...state,\r\n        ...action.error\r\n      ];\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./manageContentTypes\";\r\n\r\nconst initialState = {\r\n  partnerId: \"\",\r\n  content: []\r\n};\r\n\r\nexport default function manageContentReducer(state = initialState, action = {}) {\r\n\r\n  switch (action.type) {\r\n\r\n    case types.GET_MANAGE_CONTENT:\r\n      return {\r\n        ...state,\r\n        partnerId: action.partnerId\r\n        // ...action.payload\r\n      };\r\n    case types.GET_MANAGE_CONTENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        content: action.payload\r\n      };\r\n    case types.GET_MANAGE_CONTENT_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.error\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"./subfolAppIconsTypes\";\r\n\r\nconst initialState = {\r\n  subfolAppIcons: \"image\",\r\n  listFileAppIcons: [],\r\n  listSubFol: []\r\n};\r\n\r\nexport default function manageContentReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.SELECT_SUBFOL_APP_ICONS:\r\n      return {\r\n        ...state,\r\n        subfolAppIcons: action.payload\r\n      };\r\n    case types.GET_LIST_FILE:\r\n      return {\r\n        ...state,\r\n        // ...action.payload\r\n      };\r\n    case types.GET_LIST_FILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listFileAppIcons: action.payload\r\n      };\r\n    case types.GET_LIST_FILE_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.error\r\n      };\r\n\r\n    case types.GET_SUBFOL_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listSubFol: action.payload\r\n      };\r\n    case types.GET_SUBFOL_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.error\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport login from \"./store/Login/loginReducer\"\r\nimport hospitalList from \"./store/HospitalList/hospitalListReducer\"\r\nimport manageContent from \"./store/ManageContent/manageContentReducer\"\r\nimport subfolAppIcons from \"./store/SubfolAppIcons/subfolAppIconsReducer\"\r\n\r\n\r\nexport default combineReducers({\r\n  login,\r\n  hospitalList,\r\n  manageContent,\r\n  subfolAppIcons\r\n\r\n});\r\n","export const SAVE_FIELD_LOGIN = \"SAVE_FIELD_LOGIN\";\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n// import appReducers from './reducers/index';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n    // other store enhancers if any\n  )\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}